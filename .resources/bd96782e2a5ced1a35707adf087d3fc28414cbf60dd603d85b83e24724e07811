{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\tWorkflowOperationsId\u003dself.session.custom.WorkflowOperationsId\n\tWoNumber\u003dself.session.custom.WoNumber\n\tWorkflowId \u003d self.session.custom.WorkflowId\n\tuserID\u003dself.session.custom.UserId\n\tself.session.custom.WorkflowOperationsId\u003dWorkflowOperationsId\n\tself.session.custom.WoNumber\u003dWoNumber\n\tself.session.custom.WorkflowId\u003dWorkflowId\n\tself.session.custom.UserId\u003duserID\n\tself.getChild(\"root\").getChild(\"goodQtyLabel\").props.text \u003d int(self.session.custom.ComPlEtetioNQTy)\n\tsystem.perspective.print(\"Workorder Quantity \u003d \"+str(int(self.session.custom.ComPlEtetioNQTy)))\n\t#---------------------------------------------------------------------\n#\tdefaultPath \u003d \"[default]\"\n#\tareaNameP \u003d \"Assembly\"  #self.session.custom.areaName\n#\tlineNameP \u003d \"H01\" #self.session.custom.lineName\n#\tmachineNameP \u003d \"Machine_1\" #self.session.custom.machineName\n#\ttagName \u003d \"GoodQty\"\n#\ttagName1 \u003d \"BadQty\"\n#\t\n#\tgoodQtytagPath \u003d defaultPath+\"/\"+areaNameP+\"/\"+lineNameP+\"/\"+machineNameP+\"/\"+tagName\t\n#\tbadQtytagPath \u003d defaultPath+\"/\"+areaNameP+\"/\"+lineNameP+\"/\"+machineNameP+\"/\"+tagName1\n#\tgoodQty \u003d system.tag.read(goodQtytagPath).value\n#\tbadQty \u003d system.tag.read(badQtytagPath).value\n#\t\n##\tself.getChild(\"root\").getChild(\"goodQtyLabel\").props.text \u003d goodQty\n#\tself.getChild(\"root\").getChild(\"badQtyLabel\").props.text \u003d badQty"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "height": 341,
      "width": 353
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "LblTitle"
        },
        "position": {
          "height": 31,
          "width": 351
        },
        "props": {
          "style": {
            "backgroundColor": "#4E8EC2"
          },
          "text": "Complete Production",
          "textStyle": {
            "backgroundColor": "#4E8EC2",
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 8,
            "color": "#FAFAFB",
            "fontFamily": "Arial",
            "fontSize": 16,
            "fontWeight": "bold",
            "margin": 75,
            "textAlign": "Center",
            "whiteSpace": "normal"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tsystem.perspective.closePopup(\u0027\u0027)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "IcnClose"
        },
        "position": {
          "height": 31,
          "width": 40,
          "x": 307.95,
          "y": -3
        },
        "props": {
          "path": "material/close",
          "style": {
            "color": "#FFFFFF",
            "fontFamily": "Arial",
            "fontSize": 14
          }
        },
        "type": "ia.display.icon"
      },
      {
        "meta": {
          "name": "LblMsgScan"
        },
        "position": {
          "height": 27,
          "width": 83,
          "x": 16,
          "y": 39.4
        },
        "props": {
          "style": {
            "classes": "PDA/Label_WithOutBackground"
          },
          "text": "Scan Badge",
          "textStyle": {
            "classes": "PDA/LabelText"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TxtScanBadge",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            }
          }
        },
        "position": {
          "height": 30,
          "width": 270,
          "x": 17,
          "y": 72.5
        },
        "propConfig": {
          "props.text": {
            "onChange": {
              "enabled": null,
              "script": "\tif len(currentValue)\u003e1:\n\t\tself.getSibling(\"BtnOk\").props.enabled\u003d1\n\telse:\n\t\tself.getSibling(\"BtnOk\").props.enabled\u003d0\n\t"
            }
          }
        },
        "props": {
          "deferUpdates": false,
          "placeholder": "Scan Badge",
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.text-field"
      },
      {
        "meta": {
          "name": "ImgBarcode"
        },
        "position": {
          "height": 15,
          "width": 25,
          "x": 6.99,
          "y": 4.640000000000001
        },
        "props": {
          "source": "/system/images/Builtin/icons/16/barcode.png"
        },
        "type": "ia.display.image"
      },
      {
        "meta": {
          "name": "ImgScanner"
        },
        "position": {
          "height": 30,
          "rotate": {
            "anchor": "25% 50%"
          },
          "width": 26,
          "x": 302.2375,
          "y": 72.78
        },
        "props": {
          "fit": {
            "mode": "fill"
          },
          "source": "/system/images/Builtin/icons/16/barcodesmall.png  "
        },
        "type": "ia.display.image"
      },
      {
        "meta": {
          "name": "LblGood"
        },
        "position": {
          "height": 16,
          "width": 43,
          "x": 16,
          "y": 123.3
        },
        "props": {
          "text": "Good",
          "textStyle": {
            "classes": "PDA/LabelText"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblBad",
          "visible": false
        },
        "position": {
          "height": 17,
          "width": 31,
          "x": 212.3,
          "y": 123.3
        },
        "props": {
          "text": "Bad",
          "textStyle": {
            "classes": "PDA/LabelText"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblComment"
        },
        "position": {
          "height": 23.409999999999997,
          "width": 81.99,
          "x": 16,
          "y": 196.1
        },
        "props": {
          "style": {
            "classes": "PDA/Label_WithOutBackground"
          },
          "text": "Comment:",
          "textStyle": {
            "classes": "PDA/LabelText"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TxtComment",
          "tooltip": {
            "location": "bottom-right"
          }
        },
        "position": {
          "height": 30,
          "width": 308,
          "x": 17,
          "y": 224.2
        },
        "props": {
          "deferUpdates": false,
          "placeholder": "Add Comment",
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.text-field"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tsystem.perspective.openPopup(\u0027LoaderPopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/Loader/LoaderPopup\u0027,draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\n\ttry:\n\t\tWoNumber \u003d self.session.custom.WoNumber\n\t\tWorkOrderId \u003d selectedWorkorderId \u003d self.session.custom.WorkorderID\n\t\tScanBadge\u003dself.getSibling(\"TxtScanBadge\").props.text\n\t\tUserId\u003d int(self.session.custom.UserId)   \t\t\n\t\tWorkorderType \u003d self.session.custom.WOType\t\t\n\t\tWorkOrderStatusId\u003d3\n\n\t\tif (str(WorkorderType) \u003d\u003d str(2)):\n\t\t\tClubbedWo \u003d MaterialRequestAPI.getCNSClubbedWorkorderDetailsbyworkorderId(selectedWorkorderId)\n\t\t\tIsWorkOrderClubbed \u003d ClubbedWo.getValueAt(0,\u0027IsWorkOrderClubbed\u0027)\n\n\t\t\tif IsWorkOrderClubbed \u003d\u003d True or str(IsWorkOrderClubbed).lower() \u003d\u003d str(\"true\").lower():\n\t\t\t\tsystem.perspective.print(\"Print 1: CNS : In Clubbed Workorder\")\n\t\t\t\tprimaryWorkorderId \u003d ClubbedWo.getValueAt(0,\u0027PrimaryWorkOrderId\u0027)\n\n\t\t\t\tif selectedWorkorderId\u003d\u003dprimaryWorkorderId:\n\t\t\t\t\tIsClubbed\u003dTrue\n\t\t\t\t\tHoldReasonCodeId\u003d0\n\t\t\t\t\tComment\u003d\u0027\u0027\n\t\t\t\t\tWoStartAck\u003dProductionOperatorConsole.UpdateWoOperationStatus(WorkOrderId,IsClubbed,UserId,WorkOrderStatusId,ScanBadge,HoldReasonCodeId,Comment)\n\t\t\t\t\tself.session.custom.WOOperationStatus \u003d \u0027Completed\u0027 #To write in Start Session\n\t \t\t\t\tself.session.custom.woStatus\u003d\u0027Completed\u0027\n\t \t\t\t\tsystem.perspective.closePopup(\u0027CompleteOpPopup\u0027)\n\t \t\t\t\tsystem.perspective.closePopup(\u0027LoaderPopup\u0027)\n\t \t\t\t\tsystem.perspective.navigate(\"/ProductionOperatorConsole\")  \n \t\t\t\telse:\n \t\t\t\t\tsystem.perspective.closePopup(\u0027CompleteOpPopup\u0027) \n \t\t\t\t\tsystem.perspective.closePopup(\u0027LoaderPopup\u0027) \n\t\t\t\t\tPrimaryWorkorderNo \u003d ClubbedWo.getValueAt(0,\u0027PrimaryWorkorderNo\u0027)\n\t\t\t\t\tMessageText\u003d \"Please complete the operation againt main part workorder only : \" + str(PrimaryWorkorderNo)\n\t\t\t\t\tupdaateStatus\u003d0\n\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":MessageText,\"updaateStatus\":updaateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\n\n\t\t\telse:\n\t\t\t\tsystem.perspective.print(\"Print 2: CNS : Not A Clubbed Workorder\")\n\t\t\t\tIsClubbed\u003dFalse\n\t\t\t\tHoldReasonCodeId\u003d0\n\t\t\t\tComment\u003d\u0027\u0027\n\t\t\t\tWoStartAck\u003dProductionOperatorConsole.UpdateWoOperationStatus(WorkOrderId,IsClubbed,UserId,WorkOrderStatusId,ScanBadge,HoldReasonCodeId,Comment)\n\t\t\t\tself.session.custom.WOOperationStatus \u003d \u0027Completed\u0027 #To write in Start Session\n\t\t\t\tself.session.custom.woStatus\u003d\u0027Completed\u0027\n\t\t\t\tsystem.perspective.closePopup(\u0027CompleteOpPopup\u0027)\n\t\t\t\tsystem.perspective.closePopup(\u0027LoaderPopup\u0027)\n\t\t\t\tsystem.perspective.navigate(\"/ProductionOperatorConsole\")\n\t\telse:\n\t\t\tsystem.perspective.print(\"Print 3: Assembly Workorder\")\n\t\t\tIsClubbed\u003dFalse\n\t\t\tHoldReasonCodeId\u003d0\n\t\t\tComment\u003d\u0027\u0027\n\t\t\tWoStartAck\u003dProductionOperatorConsole.UpdateWoOperationStatus(WorkOrderId,IsClubbed,UserId,WorkOrderStatusId,ScanBadge,HoldReasonCodeId,Comment)\n\t\t\tself.session.custom.WOOperationStatus \u003d \u0027Completed\u0027 #To write in Start Session\n\t\t\tself.session.custom.woStatus\u003d\u0027Completed\u0027\n\t\t\tsystem.perspective.closePopup(\u0027CompleteOpPopup\u0027)\n\t\t\tsystem.perspective.closePopup(\u0027LoaderPopup\u0027)\n\t\t\tsystem.perspective.navigate(\"/ProductionOperatorConsole\") \n\t\tsystem.perspective.closePopup(\u0027LoaderPopup\u0027) \n\texcept:\n\t\timport sys, os\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\tlineno \u003d tb.tb_lineno\n\t\terrorMessage \u003d \"\u0027Exception :: Production Operator Console: View WO: Complete WO: \u0027:\"+ str(exc_obj) + \" || Line No: \"+ str(lineno)\n\t\tsystem.perspective.print(errorMessage+\u0027 || Line No :\u0027 + str(lineno))\n\t\tAuthentication.exceptionLogger(errorMessage)\t"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "BtnOk",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            },
            "text": "Click To Complete"
          }
        },
        "position": {
          "height": 35,
          "width": 100,
          "x": 213.438,
          "y": 279
        },
        "propConfig": {
          "props.enabled": {
            "binding": {
              "config": {
                "expression": "now(1000)"
              },
              "transforms": [
                {
                  "code": "\tcommentTxt \u003d self.getSibling(\"TxtComment\").props.text\n\tscanBadgeTxt \u003d self.getSibling(\"TxtScanBadge\").props.text\n\t\n\tif (scanBadgeTxt !\u003d\u0027\u0027):\n\t\tvalue \u003d True\n\t\tself.props.style.backgroundColor \u003d \"#3888CC\"\n\t\tself.props.style.borderColor \u003d \"#3888CC\"\n\telse:\n\t\tvalue\u003d False\n\t\tself.props.style.backgroundColor \u003d str(self.session.custom.disableBtncolour)\n\t\tself.props.style.borderColor \u003d str(self.session.custom.disableBtncolour)\n\treturn value",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "image": {
            "width": 100
          },
          "style": {
            "backgroundColor": "value",
            "borderColor": "value",
            "classes": "PDA/PDAButton"
          },
          "text": "Complete"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "LblMsgQlty_1"
        },
        "position": {
          "height": 32,
          "width": 14,
          "x": 85.9844,
          "y": 37.4
        },
        "props": {
          "style": {
            "classes": "PDA/LabelText"
          },
          "text": "*",
          "textStyle": {
            "classes": "PDA/LabelText",
            "color": "#FF4747"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tsystem.perspective.closePopup(\u0027\u0027)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "BtnOk_0",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            },
            "text": "Click To Cancel"
          }
        },
        "position": {
          "height": 35,
          "width": 100,
          "x": 37.4844,
          "y": 279
        },
        "props": {
          "image": {
            "width": 100
          },
          "style": {
            "classes": "PDA/PDAButton"
          },
          "text": "Cancel"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "badQtyLabel",
          "visible": false
        },
        "position": {
          "height": 30,
          "width": 115,
          "x": 212.3,
          "y": 146.75
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "aggregate": "MinMax",
                "avoidScanClassValidation": true,
                "dateRange": {
                  "mostRecent": "1",
                  "mostRecentUnits": "HOUR"
                },
                "enableValueCache": true,
                "ignoreBadQuality": false,
                "polling": {
                  "enabled": true,
                  "rate": "1"
                },
                "preventInterpolation": false,
                "returnFormat": "Wide",
                "returnSize": {
                  "numRows": "100",
                  "type": "FIXED"
                },
                "tags": [],
                "valueFormat": "DOCUMENT"
              },
              "enabled": false,
              "transforms": [
                {
                  "code": "\ttry:\n\t\tuserId\u003dself.session.custom.UserId\n\t\tWoNumber \u003d self.session.custom.WoNumber\n\t\tWONO\u003d self.session.custom.WoNumber\n\t\tareaName \u003d self.session.custom.areaName\n\t\tmachineList\u003dProductionOperatorConsole.GetMachineDetails(userId,WONO)\n\t\tsystem.perspective.print(\"machineList--\u003e\"+str(machineList))\n\t\trowCount\u003dmachineList.getRowCount()\n\t\ttotal \u003d 0\n\t\tfor i in range (rowCount):\n\t\t\tmachineName\u003dmachineList.getValueAt(i, \u0027Equipment Code\u0027)\n\t\t\tmachineId\u003dmachineList.getValueAt(i, \u0027machineID\u0027)\n\t\t\tWoNumber\u003dself.session.custom.WoNumber\n\t\t\tdefaultPath\u003dsystem.tag.read(\"[default]JMES_InternalTags/DafaultTagPath\").value\n\t\t\ttagPath \u003d str(defaultPath)+str(machineName)+\"/GoodQty\"\n\t\t\ttempVariable\u003dsystem.tag.read(tagPath).value\t\t\n\t\t\tif areaName\u003d\u003d\"CNS\":\n\t\t\t\tgoodQty \u003d PackingAndLabelling.getGoodQtyForCNSMoldingMachines(WoNumber,machineId,machineName,tempVariable)\t\n\t\t\telse:\n\t\t\t\tgoodQty\u003dtempVariable\t\t\n\t\t\ttotal \u003d int(total+goodQty)\n\t\tself.session.custom.actualWoQty\u003dtotal\n\t\treturn total\n\texcept:\n\t\tsystem.perspective.print(\"Exception::WO Qty\")\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)",
                  "type": "script"
                }
              ],
              "type": "tag-history"
            }
          }
        },
        "props": {
          "style": {
            "backgroundColor": "#FFFFFF",
            "classes": "Common/TextBox"
          },
          "text": null,
          "textStyle": {
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "goodQtyLabel"
        },
        "position": {
          "height": 30,
          "width": 270,
          "x": 17,
          "y": 145
        },
        "props": {
          "style": {
            "backgroundColor": "#FFFFFF",
            "classes": "Common/TextBox"
          },
          "text": 0,
          "textStyle": {
            "textAlign": "center"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "position": {
      "x": -36.05207824707031,
      "y": -2
    },
    "props": {
      "style": {
        "classes": "Panel/PopUp"
      }
    },
    "type": "ia.container.coord"
  }
}