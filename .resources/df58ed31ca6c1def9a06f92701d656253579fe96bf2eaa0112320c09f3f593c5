{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\ttry:\n\t\tworkorderId \u003d self.session.custom.WorkorderID\t\n\t\tworkorderNumber \u003d self.session.custom.WoNumber\n\t\tself.getChild(\"root\").getChild(\"LblWONo\").props.text \u003d workorderNumber\t\t\n#\t\tmachineList \u003d ProductionOperatorConsole.getMachineListForTakeIn(WorkorderId)\n\t\tmachineList \u003d TakeIn_TakeOut.getMachineListForTakeIn(workorderId)\n\t\tsystem.perspective.print(\"Machinlist: \"+str(machineList))\n\t\trowcount\u003dmachineList.getRowCount()\n#\t\tif rowcount!\u003d0:\n\t\t\n\t\tself.getChild(\"root\").getChild(\"Table\").props.data \u003d machineList\n#\t\telse:\n#\t\t\tsystem.perspective.print(\u0027Machines are not available for take-In\u0027)\t\n\t\t\n#-------------------Button Enable Disable-----------------------------\n\t\tworkorderId \u003d self.session.custom.WorkorderID\n\t\tActionCode \u003d 1  # Meaning of this Acive Code is 1 \u003d TakeIn ; 0 \u003d  TakeOut\n\t\tresult \u003d TakeIn_TakeOut.takeIntakeOutButtonValidation(workorderId,ActionCode)\n\t\tsystem.perspective.print(\"result: \"+str(result))\n\t\tif result \u003d\u003d 1:\n\t\t\tsystem.perspective.print(\"Enable Link Machine Button\")\n\t\t\tself.getChild(\"root\").getChild(\"Btn_LinkMachine\").props.enabled \u003d 1\n\t\t\tself.session.custom.TakinTableEnbDsb \u003d 1\n\t\t\tself.getChild(\"root\").getChild(\"Checkbox\").props.enabled \u003d 1\n\t\telif result \u003d\u003d 2:\n\t\t\tsystem.perspective.print(\"Enable Complete Take-In Button\")\n\t\t\tself.getChild(\"root\").getChild(\"Btn_CompleteTakeIn\").props.enabled \u003d 1\n\t\t\tself.session.custom.TakinTableEnbDsb \u003d 0\n\t\t\tself.getChild(\"root\").getChild(\"Checkbox\").props.enabled \u003d 0\n\t\telif result \u003d\u003d 5:\n\t\t\tsystem.perspective.print(\"Enable Both\")\t\n\t\n\texcept:\n\t\tsystem.perspective.print(\u0027Exception :: Take In On startup\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)\t\n\t\n\t\n\t"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "height": 661,
      "width": 1376
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "LblTitle"
        },
        "position": {
          "height": 38.98,
          "width": "100%"
        },
        "props": {
          "style": {
            "backgroundColor": "#4E8EC2"
          },
          "text": "Workorder Machine Take-In",
          "textStyle": {
            "backgroundColor": "#4E8EC2",
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 8,
            "color": "#FAFAFB",
            "fontFamily": "Arial",
            "fontSize": 16,
            "fontWeight": "bold",
            "margin": 10,
            "textAlign": "Center",
            "whiteSpace": "normal"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Table"
        },
        "position": {
          "height": 538,
          "width": 1371,
          "x": 2,
          "y": 120.28
        },
        "props": {
          "bodyStyle": {
            "classes": "Table/RowsBorder"
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Sr No",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": ""
                },
                "title": "Sr No"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": false,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 30
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Operation",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Operation Name"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": false,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Machine Name",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Machine Name"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "MachineStatus",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Machine Status"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "IsSelect",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": "",
                  "marginLeft": 0
                },
                "title": "Is Select"
              },
              "justify": "right",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": "",
                "marginLeft": 100
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {
                "rowData": "",
                "rowIndex": "",
                "value": ""
              },
              "viewPath": "Project_MES_Solution/ProductionOperatorConsole/Templates/MachineTakeIn",
              "visible": true,
              "width": ""
            }
          ],
          "data": {
            "$": [
              "ds",
              192,
              1681447915564
            ],
            "$columns": [
              {
                "data": [],
                "name": "Sr No",
                "type": "String"
              },
              {
                "data": [],
                "name": "Operation",
                "type": "String"
              },
              {
                "data": [],
                "name": "OperationId",
                "type": "String"
              },
              {
                "data": [],
                "name": "Machine Name",
                "type": "String"
              },
              {
                "data": [],
                "name": "MachineId",
                "type": "String"
              },
              {
                "data": [],
                "name": "Machine Status",
                "type": "String"
              },
              {
                "data": [],
                "name": "IsSelect",
                "type": "String"
              }
            ]
          },
          "emptyMessage": {
            "noData": {
              "text": "There is no machine to Take-In."
            }
          },
          "headerStyle": {
            "classes": "Table/Header"
          },
          "pager": {
            "bottom": false
          },
          "rows": {
            "style": {
              "classes": "Table/Rowsmiddle"
            }
          },
          "selection": {
            "enableColumnSelection": true
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "ColumnUpdateTakein",
              "pageScope": true,
              "script": "\ttry:\t\t\n\t\tisChecked \u003d payload[\u0027isChecked\u0027]\n\t\tselRow \u003d payload[\u0027SelctedRowIndex\u0027]\n\t\tupdatedValue \u003d isChecked    \n\t\tselColumn \u003d \u0027IsSelect\u0027\n\t\tdtSet \u003d self.props.data    \n\t\tupdateRowResultDs \u003d {selColumn:updatedValue}    \n\t\tresultpyData \u003d system.dataset.updateRow(dtSet,selRow,updateRowResultDs)        \n\t\tds \u003d system.dataset.toPyDataSet(resultpyData)    \n\t\tself.props.data \u003d ds  \n\texcept Exception as e:\n\t\t\tsystem.perspective.print(\u0027Exception :msg Handler updatig column\u0027)\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)\n\t\t\tsys.exit()",
              "sessionScope": false,
              "viewScope": false
            },
            {
              "messageType": "RefreshLinkTable",
              "pageScope": true,
              "script": "\ttry:\n\t\tsystem.perspective.print(\u0027In Takein Msg Handler_Start\u0027)\n\t\tworkorderId \u003d self.session.custom.WorkorderID\t\t\t\t\t\n\t\tmachineList \u003d TakeIn_TakeOut.getMachineListForTakeIn(workorderId)\n\t\tself.props.data \u003d machineList\n\t\tsystem.perspective.print(\u0027In Takein Msg Handler_End\u0027)\n#-------------------Button Enable Disable-----------------------------\n\t\tworkorderId\u003dself.session.custom.WorkorderID\n\t\tActionCode\u003d1\n\t\tresult\u003dTakeIn_TakeOut.takeIntakeOutButtonValidation(workorderId,ActionCode)\n\t\tsystem.perspective.print(\"result: \"+str(result))\n\t\tif result\u003d\u003d1:\n\t\t\tsystem.perspective.print(\"Enable Link Machine Button\")\n#\t\t\tself.getChild(\"root\").getChild(\"Btn_LinkMachine\").props.enabled\u003d1\n\t\t\tself.getSibling(\"Btn_LinkMachine\").props.enabled\u003d1\n\t\t\tself.getSibling(\"Btn_CompleteTakeIn\").props.enabled\u003d0\n\t\t\tself.session.custom.TakinTableEnbDsb\u003d1\n\t\t\tself.getSibling(\"Checkbox\").props.enabled\u003d1\n\t\telif result\u003d\u003d2:\n\t\t\tsystem.perspective.print(\"Enable Complete Take-In Button\")\n#\t\t\tself.getChild(\"root\").getChild(\"Btn_CompleteTakeIn\").props.enabled\u003d1\n\t\t\tself.getSibling(\"Btn_CompleteTakeIn\").props.enabled\u003d1\n\t\t\tself.getSibling(\"Btn_LinkMachine\").props.enabled\u003d0\n\t\t\tself.session.custom.TakinTableEnbDsb\u003d0\n\t\t\tself.getSibling(\"Checkbox\").props.enabled\u003d0\n\t\telif result\u003d\u003d5:\n\t\t\tsystem.perspective.print(\"Enable Both\")\t\n\texcept:\n\t\t\tsystem.perspective.print(\u0027Exception :: Take In On startup\u0027)\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      },
      {
        "meta": {
          "name": "LblDefault"
        },
        "position": {
          "height": 45.00000000000001,
          "rotate": {
            "anchor": "-167% 39%"
          },
          "width": 148,
          "x": 17.4,
          "y": 55.5
        },
        "props": {
          "text": "Workorder Number :",
          "textStyle": {
            "classes": "Widgets/WidgetsLabel",
            "fontSize": 15
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblWONo",
          "tooltip": {
            "location": "bottom-right"
          }
        },
        "position": {
          "height": 35,
          "width": 150,
          "x": 175.4,
          "y": 60.5
        },
        "props": {
          "style": {
            "classes": "Common/TextBox"
          },
          "textStyle": {
            "fontSize": "18l"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\ttry:\n\t\tuserId \u003d self.session.custom.UserId\n\t\tlineId \u003d self.session.custom.LineID\n\t\tisTakeInFlag \u003d 1\n\t\tstatusFlag \u003d 2\n\t\ttableData \u003d self.getSibling(\"Table\").props.data\n\t\tworkorderId \u003d self.session.custom.WorkorderID\n\t\tmachinesList \u003d tableData.getRowCount()\n\t\tjsonParams\u003d[]\n\t\tfor i in range(machinesList):\n\t\t\tisChecked \u003d tableData.getValueAt(i, \u0027IsSelect\u0027)\n\t\t\tif isChecked \u003d\u003d 1 or isChecked \u003d\u003d True:\n\t\t\t\tmachineId \u003d tableData.getValueAt(i, \u0027MachineId\u0027)\n\t\t\t\toperationId \u003d tableData.getValueAt(i, \u0027OperationId\u0027)\n\t\t\t\tparaList \u003d {\n\t\t\t     \t\t\t \"machineId\": machineId,\n\t\t\t     \t\t\t \"operationId\": operationId,\n\t\t\t     \t\t\t \"isSelected\": 1\t     \n\t\t\t  \t\t\t   }\n\t\t\t\tjsonParams.append(paraList)\t\n\t\t\n#\t\tisComponentFeed \u003d TakeIn_TakeOut.TITOComponentValidation(workorderId,jsonParams,userId)\n\t\tIsComponentFeed,IsMoldLoaded,ToolCode \u003d TakeIn_TakeOut.TITOComponentValidation(workorderId,jsonParams,userId)\n\n\t\tif IsComponentFeed \u003d\u003d 1 and IsMoldLoaded \u003d\u003d 1:\n\t\t\tisMachineLink \u003d TakeIn_TakeOut.postMachineTakeIn_OutDetails(workorderId,jsonParams,isTakeInFlag,statusFlag,userId)\n\t\t\tif isMachineLink \u003d\u003d 1 :\n\t\t\t\tmsgHandlerName \u003d \u0027RefreshLinkTable\u0027\n\t\t\t\tsystem.perspective.sendMessage(msgHandlerName, payload \u003d {\"value\":0,\"SelctedRowIndex\":0}, scope \u003d \"page\")\n\t\t\t\tmessageText \u003d \"Machine Takein Completed.\"\n\t\t\t\tupdateStatus \u003d 1\n\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\telse:\n\t\t\t\tmessageText \u003d\"Fail to link the Machines .Connect to the administrator\"\n\t\t\t\tupdateStatus \u003d 0\n\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse) \t\n\t\telse:\n\t\t\tif IsComponentFeed \u003d\u003d 0:\n\t\t\t\tAcknowledgement \u003d False  #----False for Validation of changeover True for Acknowledement for changeover\n\t\t\t\t\n\t\t\t\ttry:\n\t\t\t\t\tResultData\u003dPDAComponentScanning.getChangeoverDetails(workorderId,lineId,Acknowledgement,userId)\n\t\t\t\texcept:\n\t\t\t\t\tResultData \u003d []\n\t\n\t\t\t\ttry:\n\t\t\t\t\tValidateMFGLine \u003d ResultData.getValueAt(0,\u0027ValidateMFGLine\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tValidateMFGLine \u003d \u0027\u0027\n\t\n\t\t\t\ttry:\n\t\t\t\t\tMFGLineDifferent \u003d ResultData.getValueAt(0,\u0027MFGLineDifferent\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tMFGLineDifferent \u003d \u0027\u0027\n\t\n\t\t\t\ttry:\n\t\t\t\t\tPrevMFGLine \u003d ResultData.getValueAt(0,\u0027PrevMFGLine\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tPrevMFGLine \u003d \u0027\u0027\n\t\n\t\t\t\ttry:\n\t\t\t\t\tCurrentMFGLine \u003d ResultData.getValueAt(0,\u0027CurrentMFGLine\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tCurrentMFGLine \u003d \u0027\u0027\n\t\n\t\t\t\ttry:\n\t\t\t\t\tPartNumberChanged \u003d ResultData.getValueAt(0,\u0027PartNumberChanged\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tPartNumberChanged \u003d \u0027\u0027\n\t\n\t\t\t\ttry:\n\t\t\t\t\tCurrentPartNumber \u003d ResultData.getValueAt(0,\u0027CurrentPartNumber\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tCurrentPartNumber \u003d \u0027\u0027\n\t\n\t\t\t\ttry:\n\t\t\t\t\tworkflowChanged \u003d ResultData.getValueAt(0,\u0027WorkFlowChanged\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tworkflowChanged \u003d \u0027\u0027\n\t\n\t\t\t\ttry:\n\t\t\t\t\tAcknowledgement \u003d ResultData.getValueAt(0,\u0027Acknowledgement\u0027)\n\t\t\t\texcept:\n\t\t\t\t\tAcknowledgement \u003d \u0027\u0027\n\n\t\t\t\tif (str(ValidateMFGLine) \u003d\u003d str(\u00271\u0027) or ValidateMFGLine \u003d\u003d True)  and (str(MFGLineDifferent) \u003d\u003d str(\u00271\u0027) or str(MFGLineDifferent) !\u003d str(\u00270\u0027)):\n\t\t\t\t\tsystem.perspective.sendMessage(\"CallChangeOverScreen\", scope\u003d\u0027page\u0027)\n\t\t\t\t\tsystem.perspective.closePopup(\u0027\u0027)\n#\t\t\t\t\tself.parent.parent.parent.getChild(\"MainViewContainer\").getChild(\"EmbeddedView\").props.path\u003d\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/OprConsoleTabViews/ChangeOver\u0027\n\t\t\t\telif str(PartNumberChanged) \u003d\u003d str(\u00271\u0027) and str(workflowChanged) \u003d\u003d str(\u00270\u0027):\n\t\t\t\t\tsystem.perspective.sendMessage(\"CallChangeOverScreen\", scope\u003d\u0027page\u0027)\n\t\t\t\t\tsystem.perspective.closePopup(\u0027\u0027)\n#\t\t\t\t\tself.parent.parent.parent.getChild(\"MainViewContainer\").getChild(\"EmbeddedView\").props.path\u003d\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/OprConsoleTabViews/ChangeOver\u0027\n\t\t\t\telif str(PartNumberChanged) \u003d\u003d str(\u00270\u0027) and str(workflowChanged) \u003d\u003d str(\u00271\u0027)  and str(Acknowledgement) !\u003d str(\u00274\u0027): #Factory Same but some Components are same returnunmatched components.\n\t\t\t\t\tsystem.perspective.sendMessage(\"CallChangeOverScreen\", scope\u003d\u0027page\u0027)\n\t\t\t\t\tsystem.perspective.closePopup(\u0027\u0027)\n#\t\t\t\t\tself.parent.parent.parent.getChild(\"MainViewContainer\").getChild(\"EmbeddedView\").props.path\u003d\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/OprConsoleTabViews/ChangeOver\u0027\n\t\t\t\telif str(PartNumberChanged) \u003d\u003d str(\u00270\u0027) and str(workflowChanged) \u003d\u003d str(\u00270\u0027) and str(Acknowledgement) \u003d\u003d str(\u00274\u0027): #and isAcknowledged \u003d\u003d False:\n\t\t\t\t\tsystem.perspective.closePopup(\u0027\u0027)\n\t\t\t\t\tMessageText \u003d \"Please do changeover for this workorder using change over tab and do the complete takin\"\n\t\t\t\t\tsystem.perspective.openPopup(\u0027ValidationPopu\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/ValidationPopup\u0027,params\u003d{\"MessageText\":MessageText},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\n\t\t\t\t\tsystem.perspective.sendMessage(\"CallChangeOverScreen\", scope\u003d\u0027page\u0027)\n#\t\t\t\t\tself.parent.parent.parent.getChild(\"MainViewContainer\").getChild(\"EmbeddedView\").props.path\u003d\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/OprConsoleTabViews/ChangeOver\u0027\n\t\t\t\telse:\n\t\t\t\t\tmessageText \u003d\"Please ensure that all selected machines are loaded with material before completing the takin.\"\n\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\n\t\t\telif IsMoldLoaded \u003d\u003d 0:\n\t\t\t\tmessageText \u003d\"Please ensure that all selected machines are loaded with mold before completing the takin.\"\n\t\t\t\tupdateStatus \u003d 0\n\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\n\texcept:\n\t\timport sys, os\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\tlineno \u003d tb.tb_lineno\n\t\terrorMessage \u003d \"\u0027Exception :: Production Operator Console: Complete Takein Button \u0027:\"+ str(exc_obj) + \" || Line No: \"+ str(lineno)\n\t\tsystem.perspective.print(errorMessage+\u0027 || Line No :\u0027 + str(lineno))\n\t\tAuthentication.exceptionLogger(errorMessage)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Btn_CompleteTakeIn"
        },
        "position": {
          "height": 40,
          "width": 228,
          "x": 1140,
          "y": 58
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "transforms": [
                {
                  "code": "\tif (str(value).lower() \u003d\u003d str(\u0027In-Progress\u0027).strip().lower()):\n\t\treturn 1\n\telse:\n\t\treturn 0",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "enabled": 0,
          "text": "Complete Take-In"
        },
        "type": "ia.input.button"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tsystem.perspective.closePopup(\u0027\u0027)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "IcnClose"
        },
        "position": {
          "height": 31,
          "width": 40,
          "x": 1331.95,
          "y": 4
        },
        "props": {
          "path": "material/close",
          "style": {
            "color": "#FFFFFF",
            "fontFamily": "Arial",
            "fontSize": 14
          }
        },
        "type": "ia.display.icon"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\ttry:\n\t\tuserId \u003d self.session.custom.UserId\n\t\tisTakeInFlag \u003d 1\n\t\tstatusFlag \u003d 1\n\t\tatLeastOneMachineSelectedFlag \u003d 0\n\t\t\n\t\ttableData \u003d self.getSibling(\"Table\").props.data\n\t\tworkorderId \u003d self.session.custom.WorkorderID\n\t\tmachinesList \u003d tableData.getRowCount()\n\t\tjsonParams \u003d []\n\t\tsystem.perspective.print(\"Checkpoint 1\")\n\t\tfor i in range(machinesList):\n\t\t\tisChecked \u003d tableData.getValueAt(i, \u0027IsSelect\u0027)\n\t\t\tif isChecked \u003d\u003d 1 or isChecked \u003d\u003d True:\n\t\t\t\tatLeastOneMachineSelectedFlag \u003d 1\n\t\t\t\tmachineId \u003d tableData.getValueAt(i, \u0027MachineId\u0027)\n\t\t\t\toperationId \u003d tableData.getValueAt(i, \u0027OperationId\u0027)\n\t\t\t\tparaList \u003d {\n\t\t\t     \t\t\t \"machineId\": machineId,\n\t\t\t     \t\t\t \"operationId\": operationId,\n\t\t\t     \t\t\t \"isSelected\": 1\t\t\t     \t\t\t\t     \n\t\t\t  \t\t\t   }\n\t\t\t\tjsonParams.append(paraList)\t\n\t\t\t\tsystem.perspective.print(paraList)\t\n\t\t\t\tsystem.perspective.print(\"Checkpoint 2\")\n\t\tif atLeastOneMachineSelectedFlag\u003d\u003d1:\t\t\n\t\t\ttry:\t\n\t\t\t\tsystem.perspective.print(\"Json parameter (workorderId/isTakeInFlag/statusFlag/userId): \"+str(workorderId)+\"/\"+str(isTakeInFlag)+\"/\"+str(statusFlag)+\"/\"+str(userId))\t\t\t\t\n\t\t\t\tisMachineLink \u003d TakeIn_TakeOut.postMachineTakeIn_OutDetails(workorderId,jsonParams,isTakeInFlag,statusFlag,userId)\n\t\t\t\tsystem.perspective.print(\"Json parameter list is posted via SQl API.----\u003e \"+str(isMachineLink))\t\t\t\t\n\t\t\texcept:\n\t\t\t\tsystem.perspective.print(\u0027Error while posting TakeIn details. Please check API parameters.\u0027)\n\t\t\telse:\n\t\t\t\tsystem.perspective.print(\"Checkpoint 3\")\n\t\t\t\tif isMachineLink \u003d\u003d 1:\n\t\t\t\t\tsystem.perspective.print(\"Checkpoint 4\")\n\t\t\t\t\tmsgHandlerName \u003d \u0027RefreshLinkTable\u0027\n\t\t\t\t\tsystem.perspective.sendMessage(msgHandlerName, payload \u003d {\"value\":0,\"SelctedRowIndex\":0}, scope \u003d \"page\")\n\t\t\t\t\tmessageText \u003d \"Machine Linked Successfully.\"\n\t\t\t\t\tupdateStatus \u003d 1\n\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\telse:\n\t\t\t\t\tsystem.perspective.print(\"Checkpoint 5\")\n\t\t\t\t\tmessageText \u003d\"Fail to link the Machines .Connect to the administrator\"\n\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\telse:\n\t\t\tmessageText \u003d\"No Machine is selected for Takein.Please select atleast one machine.\"\n\t\t\tupdateStatus \u003d 0\n\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\n\texcept:\n\t\tsystem.perspective.print(\"Checkpoint 7\")\n\t\tsystem.perspective.print(\u0027Exception :Post machine Link-Unlink\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Btn_LinkMachine"
        },
        "position": {
          "height": 40,
          "width": 228,
          "x": 902,
          "y": 58
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "transforms": [
                {
                  "code": "\tif (str(value).lower() \u003d\u003d str(\u0027In-Progress\u0027).strip().lower()):\n\t\treturn 1\n\telse:\n\t\treturn 0",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          },
          "props.enabled": {
            "binding": {
              "config": {
                "path": "this.props.enabled"
              },
              "enabled": false,
              "previewEnabled": false,
              "transforms": [
                {
                  "code": "\tworkorderId\u003dself.session.custom.WorkorderID\n\tActionCode\u003d1\n\tresult\u003dTakeIn_TakeOut.takeIntakeOutButtonValidation(workorderId,ActionCode)\n\tsystem.perspective.print(\"TakeIn_TakeOut: \"+str(result))\n\treturn result",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "enabled": 0,
          "text": "Link Machines"
        },
        "type": "ia.input.button"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\ttry:\n\n\t\tupdatedValue\u003dself.props.selected\n\t\tselColumn\u003d\u0027IsSelect\u0027\n\t\tresultpyData\u003dself.getSibling(\"Table\").props.data \n\t\tresultpyData\u003dsystem.dataset.toPyDataSet(resultpyData)\n \n\t\tfor i in range(len(resultpyData)):\n\t\t\tselRow\u003di\n\t\t\tupdateRowResultDs \u003d {selColumn:updatedValue}    \n\t\t\tresultpyData \u003d system.dataset.updateRow(resultpyData,selRow,updateRowResultDs)        \n\t\t\tresultpyData\u003d system.dataset.toPyDataSet(resultpyData)    \n\t\tself.getSibling(\"Table\").props.data\u003dresultpyData\n\t\tsystem.perspective.print(\"Data Loaded Successfully\")\n\texcept:\n\t\t\tsystem.perspective.print(\u0027Exception:Select All\u0027)\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)\n\t\t\tsys.exit()\t\t\n\t\t\t"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Checkbox"
        },
        "position": {
          "height": 26,
          "width": 32,
          "x": 1187,
          "y": 120.265625
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "../Table.props.data"
              },
              "previewEnabled": false,
              "transforms": [
                {
                  "code": "\ttableDs\u003dsystem.dataset.toPyDataSet(value)\n\tif len(tableDs)\u003e0:\n\t\treturn 1\n\telse:\n\t\treturn 0",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "text": ""
        },
        "type": "ia.input.checkbox"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\ttry:\n\t\tuserId \u003d self.session.custom.UserId\n\t\tisTakeInFlag \u003d 1\n\t\tstatusFlag \u003d 5   #  1 \u003d In Progress WO Link MC ;2 \u003d In Progress WO LComplete TakeIn ;5 \u003d Not Started WO Complete Takein at one click ;6 \u003d Not Started WO Complete Takeout at one click\n\t\tatLeastOneMachineSelectedFlag \u003d 0\n\n\t\ttableData \u003d self.getSibling(\"Table\").props.data\n\t\tworkorderId \u003d self.session.custom.WorkorderID\n\t\tmachinesList \u003d tableData.getRowCount()\n\t\tjsonParams \u003d []\n\t\tfor i in range(machinesList):\n\t\t\tisChecked \u003d tableData.getValueAt(i, \u0027IsSelect\u0027)\n\t\t\tif isChecked \u003d\u003d 1 or isChecked \u003d\u003d True:\n\t\t\t\tatLeastOneMachineSelectedFlag \u003d 1\n\t\t\t\tmachineId \u003d tableData.getValueAt(i, \u0027MachineId\u0027)\n\t\t\t\toperationId \u003d tableData.getValueAt(i, \u0027OperationId\u0027)\n\t\t\t\tparaList \u003d {\n\t\t\t     \t\t\t \"machineId\": machineId,\n\t\t\t     \t\t\t \"operationId\": operationId,\n\t\t\t     \t\t\t \"isSelected\": 1\t\t\t     \t\t\t\t     \n\t\t\t  \t\t\t   }\n\t\t\t\tjsonParams.append(paraList)\n\t\t\t\t\n\t\t\t\tsystem.perspective.print(\"JSON For TITO\")\n\t\t\t\tsystem.perspective.print(paraList)\n\n\t\tif atLeastOneMachineSelectedFlag \u003d\u003d 1:\n\t\t\tClubbedWo \u003d MaterialRequestAPI.getCNSClubbedWorkorderDetailsbyworkorderId(workorderId)\n\t\t\tIsWorkOrderClubbed \u003d ClubbedWo.getValueAt(0,\u0027IsWorkOrderClubbed\u0027)\n\n\t\t\tif IsWorkOrderClubbed \u003d\u003d True or str(IsWorkOrderClubbed).lower() \u003d\u003d str(\"true\").lower():\n\t\t\t\tsystem.perspective.print(\"Print 1: CNS : In Clubbed Workorder\")\n\t\t\t\tprimaryWorkorderId \u003d ClubbedWo.getValueAt(0,\u0027PrimaryWorkOrderId\u0027)\n\t\t\t\tif workorderId\u003d\u003dprimaryWorkorderId:\n\t\t\t\t\ttry:\t\t\n\t\t\t\t\t\tisMachineLink \u003d TakeIn_TakeOut.postMachineTakeIn_OutDetails(workorderId,jsonParams,isTakeInFlag,statusFlag,userId)\n\t\t\t\t\texcept:\n\t\t\t\t\t\tsystem.perspective.print(\u0027Error while posting TakeIn details. Please check API parameters.\u0027)\n\t\t\t\t\telse:\n\t\t\t\t\t\tif isMachineLink \u003d\u003d 1:\n\t\t\t\t\t\t\tmsgHandlerName \u003d \u0027RefreshLinkTable\u0027\n\t\t\t\t\t\t\tsystem.perspective.sendMessage(msgHandlerName, payload \u003d {\"value\":0,\"SelctedRowIndex\":0}, scope \u003d \"page\")\n\t\t\t\t\t\t\tmessageText \u003d \"Machine Linked Successfully.\"\n\t\t\t\t\t\t\tupdateStatus \u003d 1\n\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tmessageText \u003d\"Fail to link the Machines .Connect to the administrator\"\n\t\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\n\t\t\t\telse:\n\t\t\t\t\tPrimaryWorkorderNo \u003d ClubbedWo.getValueAt(0,\u0027PrimaryWorkorderNo\u0027)\n\t\t\t\t\tmessageText \u003d \u0027Please select and take in the machine against main workorder :\u0027 + str(PrimaryWorkorderNo)\n\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\n\t\t\telse:\n\t\t\t\ttry:\t\t\n\t\t\t\t\tisMachineLink \u003d TakeIn_TakeOut.postMachineTakeIn_OutDetails(workorderId,jsonParams,isTakeInFlag,statusFlag,userId)\n\t\t\t\texcept:\n\t\t\t\t\tsystem.perspective.print(\u0027Error while posting TakeIn details. Please check API parameters.\u0027)\n\t\t\t\telse:\n\t\t\t\t\tif isMachineLink \u003d\u003d 1:\n\t\t\t\t\t\tmsgHandlerName \u003d \u0027RefreshLinkTable\u0027\n\t\t\t\t\t\tsystem.perspective.sendMessage(msgHandlerName, payload \u003d {\"value\":0,\"SelctedRowIndex\":0}, scope \u003d \"page\")\n\t\t\t\t\t\tmessageText \u003d \"Machine Linked Successfully.\"\n\t\t\t\t\t\tupdateStatus \u003d 1\n\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\telse:\n\t\t\t\t\t\tmessageText \u003d\"Fail to link the Machines .Connect to the administrator\"\n\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\telse:\n\t\t\tmessageText \u003d\"No Machine is selected for Takein.Please select atleast one machine.\"\n\t\t\tupdateStatus \u003d 0\n\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\n\texcept:\n\t\timport sys, os\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\tlineno \u003d tb.tb_lineno\n\t\terrorMessage \u003d \"\u0027Exception :: Production Operator Console: Take In Screen: Take in Button \u0027:\"+ str(exc_obj) + \" || Line No: \"+ str(lineno)\n\t\tsystem.perspective.print(errorMessage+\u0027 || Line No :\u0027 + str(lineno))\n\t\tAuthentication.exceptionLogger(errorMessage)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Btn_LinkAndTakeIn"
        },
        "position": {
          "height": 40,
          "width": 228,
          "x": 664,
          "y": 58
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "transforms": [
                {
                  "code": "\tif (str(value).lower() \u003d\u003d str(\u0027Not-Started\u0027).strip().lower()) or (str(value).lower() \u003d\u003d str(\u0027Not Started\u0027).strip().lower()) or ((str(value).lower() \u003d\u003d str(\u0027On-Hold\u0027).strip().lower()) or (str(value).lower() \u003d\u003d str(\u0027On Hold\u0027).strip().lower())):\n\t\treturn 1\n\telse:\n\t\treturn 0\n\t\t\n\t\t\n\t\n",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "enabled": 1,
          "text": "Take In Machines"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "LblDefault_0"
        },
        "position": {
          "height": 45,
          "rotate": {
            "anchor": "-167% 39%"
          },
          "width": 140,
          "x": 335.4,
          "y": 55.5
        },
        "props": {
          "text": "Workorder Status :",
          "textStyle": {
            "classes": "Widgets/WidgetsLabel",
            "fontSize": 15
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblWONo_0",
          "tooltip": {
            "location": "bottom-right"
          }
        },
        "position": {
          "height": 35,
          "width": 150,
          "x": 485.4,
          "y": 60.5
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "transforms": [
                {
                  "code": "\tif str(value) \u003d\u003d str(\u0027null\u0027) or str(value) \u003d\u003d str(\u0027Null\u0027):\n\t\treturn \u0027\u0027\n\telse:\n\t\treturn value",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Common/TextBox"
          },
          "textStyle": {
            "fontSize": "18l"
          }
        },
        "type": "ia.display.label"
      }
    ],
    "meta": {
      "name": "root"
    },
    "position": {
      "x": 56,
      "y": 174
    },
    "props": {
      "style": {
        "backgroundColor": "#FFFFFF"
      }
    },
    "type": "ia.container.coord"
  }
}