{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\t#Clearing All Dropdwon Values and Text field on Startup\n\tself.getChild(\"root\").getChild(\"DrpdownOperation\").props.value \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"DrpdownEquipment\").props.value \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"DropdownCodeSubtype\").props.value \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"DropdowncodeName\").props.value \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"DropdownSelectpriority\").props.value \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"LblMakeName\").props.text \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"LblModelName\").props.text \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"LblMakeName\").custom.MakeId \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"LblModelName\").custom.ModelId \u003d \u0027\u0027\n\tself.getChild(\"root\").getChild(\"LblErrorMsg\").meta.visible \u003d False\n\ttry:\n\t\tselectedWorkorderId\u003dself.session.custom.WorkorderID\n\t\tOperationList\u003dMaintenanceRMAPI.getOperationsbyWorkorderId(selectedWorkorderId)\n\t\tself.getChild(\"root\").getChild(\"DrpdownOperation\").props.options \u003d OperationList\n\t\tself.getChild(\"root\").getChild(\"DrpdownOperation\").focus()\n\texcept:\n\t\tpass"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "height": 498,
      "width": 598
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "LblcodeSubtype"
        },
        "position": {
          "height": 32,
          "width": 95,
          "x": 322,
          "y": 198
        },
        "props": {
          "text": "Code Subtype",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tself.getSibling(\"DropdowncodeName\").props.value \u003d \u0027\u0027\n\tself.getSibling(\"DropdownSelectpriority\").props.value \u003d \u0027\u0027\n\tself.getSibling(\"TxtReasonType\").props.text \u003d \u0027\u0027\n\tself.getSibling(\"DropdowncodeName\").focus()"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "DropdownCodeSubtype",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            }
          }
        },
        "position": {
          "height": 32,
          "width": 250,
          "x": 318.5,
          "y": 232
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "path": "../DrpdownEquipment.props.value"
              },
              "transforms": [
                {
                  "code": "\tif value !\u003d \"\":\n\t\tmainReasonTypeId \u003d 11\n\t\tsubReasonTypeId \u003d 0\n\t\tuserId \u003d self.session.custom.UserId\n\t\tsystem.perspective.print(\u0027mainReasonTypeId : \u0027 + str(mainReasonTypeId))\n\t\tsystem.perspective.print(\u0027subReasonTypeId : \u0027 + str(subReasonTypeId))\n\t\tsystem.perspective.print(\u0027userId : \u0027 + str(userId))\n\t\treasonData  \u003d ProductionOperatorConsole.getReasonsCodes(mainReasonTypeId,subReasonTypeId,userId)\n\t\tsystem.perspective.print(\u0027reasonData : \u0027 + str(reasonData))\n\telse:\n\t\treasonData \u003d []\t\n\treturn reasonData",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "placeholder": {
            "text": "Select Code Subtype"
          },
          "search": {
            "noResultsText": "No subtype found"
          },
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "LblComment"
        },
        "position": {
          "height": 32,
          "width": 95,
          "x": 27,
          "y": 345
        },
        "props": {
          "text": "Comment",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "TxtComment",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            }
          }
        },
        "position": {
          "height": 55,
          "width": 540,
          "x": 26.5,
          "y": 372
        },
        "propConfig": {
          "props.style.borderColor": {
            "binding": {
              "config": {
                "path": "this.props.text"
              },
              "transforms": [
                {
                  "code": "\tif str(value).strip() !\u003d \"\":\n\t\tvalue \u003d \"#3888CC\"\n\telse:\n\t\tvalue \u003d  str(self.session.custom.disableBtncolour)\n\n\treturn value",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "deferUpdates": false,
          "placeholder": "Add Comment",
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.text-field"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "height": 32,
              "width": 147,
              "x": 225,
              "y": 3
            },
            "props": {
              "style": {
                "color": "#FFFFFF",
                "fontWeight": "bold",
                "textAlign": "center"
              },
              "text": "Create RM Order",
              "textStyle": {
                "textAlign": "center"
              }
            },
            "type": "ia.display.label"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tsystem.perspective.closePopup(\u0027\u0027)"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Icon"
            },
            "position": {
              "height": 34,
              "width": 45,
              "x": 550,
              "y": 1
            },
            "props": {
              "color": "#FFFFFF",
              "path": "material/clear"
            },
            "type": "ia.display.icon"
          }
        ],
        "meta": {
          "name": "CoordinateContainer"
        },
        "position": {
          "height": 40,
          "width": 598
        },
        "props": {
          "style": {
            "backgroundColor": "#4E8EC2"
          }
        },
        "type": "ia.container.coord"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tsystem.perspective.closePopup(\u0027\u0027)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "BtnCancel",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            },
            "text": "Click To Cancel"
          }
        },
        "position": {
          "height": 34,
          "width": 80,
          "x": 181,
          "y": 453
        },
        "props": {
          "style": {
            "classes": "Common/Button"
          },
          "text": "Cancel"
        },
        "type": "ia.input.button"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\ttry:\n\t\tdefaultPath\u003dsystem.tag.read(\"[default]JMES_InternalTags/DafaultTagPath\").value\n\t\tuserId  \u003d self.session.custom.UserId\n\t\tmakeId \u003d self.getSibling(\"LblMakeName\").custom.MakeId\n\t\tmodelId \u003d self.getSibling(\"LblModelName\").custom.ModelId\n\t\treasonTypeId \u003d 0\n\t\treasonSubtypeId \u003d self.getSibling(\"DropdownCodeSubtype\").props.value\n\t\treasoncodeId \u003d self.getSibling(\"DropdowncodeName\").props.value\n\t\tpriorityId \u003d  self.getSibling(\"DropdownSelectpriority\").props.value\n\t\tremarks \u003d self.getSibling(\"TxtComment\").props.text\n\t\tmachineId \u003d self.getSibling(\"DrpdownEquipment\").props.value\n\t\tmachineName \u003d self.getSibling(\"DrpdownEquipment\").custom.MachineName\n\t\tRMType \u003d 1\n\t\t\n\t\tsystem.perspective.print(\"userId :\" + str(userId))\n\t\tsystem.perspective.print(\"makeId :\" + str(makeId))\n\t\tsystem.perspective.print(\"modelId :\" + str(modelId))\n\t\tsystem.perspective.print(\"reasonTypeId :\" + str(reasonTypeId))\n\t\tsystem.perspective.print(\"reasonSubtypeId :\" + str(reasonSubtypeId))\n\t\tsystem.perspective.print(\"reasoncodeId :\" + str(reasoncodeId))\n\t\tsystem.perspective.print(\"priorityId :\" + str(priorityId))\n\t\tsystem.perspective.print(\"remarks :\" + str(remarks))\n\t\tsystem.perspective.print(\u0027MachineName is:\u0027 + str(machineName))\n\t\t\n\t\t\n\t\tcreateRMStatus \u003d ProductionOperatorConsole.createRMorder(machineId,makeId,modelId,reasonTypeId,reasonSubtypeId,reasoncodeId,priorityId,userId,remarks,RMType)\n\t\n\t\tsystem.perspective.print(\"createRMStatus :\" + str(createRMStatus))\n\t\tif createRMStatus \u003d\u003d 1:\n\t#\t\ttagPath \u003d str(defaultPath) + str(machineName)+\u0027/IsRMGenerated.value\u0027\n\t\t\ttagPath \u003d str(defaultPath) + str(machineName)+\u0027/RepairAlarm.value\u0027\n\t\t\tsystem.tag.write(tagPath,1)\n\t\t\tsystem.perspective.closePopup(\u0027\u0027)\n\t\t\tsystem.perspective.openPopup(\u0027MessagePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/Material Request Screens/MessageBoxPopup\u0027,params\u003d{\"MessageText\":\" RM Order is created Successfully\",\"ErrorVisible\": False,\"SuccessVisible\":True},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\n\t\telse:\n\t\t\tsystem.perspective.openPopup(\u0027MessagePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/Material Request Screens/MessageBoxPopup\u0027,params\u003d{\"MessageText\":\" Error in creating RM Order\",\"ErrorVisible\": True,\"SuccessVisible\":False},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\n\t\t\tpass\n\texcept:\n\t\timport sys, os\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\tlineno \u003d tb.tb_lineno\n\t\terrorMessage \u003d \"\u0027Exception :: Production Operator Console: Create RM Button \u0027:\"+ str(exc_obj) + \"Code Line No: \"+ str(lineno)\n\t\tsystem.perspective.print(errorMessage+\u0027 || Line No :\u0027 + str(lineno))\n\t\tAuthentication.exceptionLogger(errorMessage)\n\t\t"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "BtnOk",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            },
            "text": "Click To Add"
          }
        },
        "position": {
          "height": 34,
          "width": 80,
          "x": 336.5,
          "y": 453
        },
        "propConfig": {
          "props.enabled": {
            "binding": {
              "config": {
                "expression": "now(500)"
              },
              "transforms": [
                {
                  "code": "\toperationSelected \u003d self.getSibling(\"DrpdownOperation\").props.value\n\tequipmentSelected \u003d self.getSibling(\"DrpdownEquipment\").props.value\n\tsubtypeSelected \u003d self.getSibling(\"DropdownCodeSubtype\").props.value\n\tcodeSelected \u003dself.getSibling(\"DropdowncodeName\").props.value\n\tprioritySelected\u003dself.getSibling(\"DropdownSelectpriority\").props.value\n\treasonComment \u003d str(self.getSibling(\"TxtComment\").props.text).strip()\n\terrorVisible \u003d str(self.getSibling(\"LblErrorMsg\").meta.visible).lower()\n\n\tif (operationSelected !\u003d \u0027\u0027) and (equipmentSelected !\u003d \u0027\u0027) and (subtypeSelected !\u003d \u0027\u0027) and (codeSelected !\u003d \u0027\u0027)  and (prioritySelected !\u003d \u0027\u0027)  and (reasonComment !\u003d str(\u0027\u0027).strip()) and (errorVisible !\u003d \u0027true\u0027):\n\t\tvalue \u003d True\n\t\tself.props.style.backgroundColor \u003d \"#3888CC\"\n\t\tself.props.style.borderColor \u003d \"#3888CC\"\n\telse:\n\t\tvalue \u003d False\n\t\tself.props.style.backgroundColor \u003d str(self.session.custom.disableBtncolour)\n\t\tself.props.style.borderColor \u003dstr(self.session.custom.disableBtncolour)\n\treturn value",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          }
        },
        "props": {
          "style": {
            "backgroundColor": "value",
            "borderColor": "value",
            "classes": "Common/Button"
          },
          "text": "Create RM"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "LblScanBadge_1"
        },
        "position": {
          "height": 32,
          "width": 10,
          "x": 416,
          "y": 198.5
        },
        "props": {
          "text": "*",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground",
            "color": "#FF0000"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblScanBadge_2"
        },
        "position": {
          "height": 32,
          "width": 10,
          "x": 90,
          "y": 343
        },
        "props": {
          "text": "*",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground",
            "color": "#FF0000"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Lblpriority"
        },
        "position": {
          "height": 32,
          "width": 123,
          "x": 322,
          "y": 271
        },
        "props": {
          "text": "Priority",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tself.getSibling(\"DropdownSelectpriority\").props.value \u003d \u0027\u0027\n\tself.getSibling(\"TxtReasonType\").props.text \u003d \u0027\u0027\n\tself.getSibling(\"DropdownSelectpriority\").focus()"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "DropdowncodeName",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            }
          }
        },
        "position": {
          "height": 32,
          "width": 250,
          "x": 24,
          "y": 303
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "path": "../DropdownCodeSubtype.props.value"
              },
              "transforms": [
                {
                  "code": "\ttry:\n\t\tmainReasonTypeId \u003d 11\n\t\tsubReasonTypeId \u003d int(value)\n\t\tuserId \u003d self.session.custom.UserId\n\t\treasonData  \u003d ProductionOperatorConsole.getReasonsCodes(mainReasonTypeId,subReasonTypeId,userId)\t\t\n\texcept Exception as e:\n\t\terrorMessage\u003d \"Operator Console Downtime :- Exception while binding data to reason code dropdown.Exception : \" +  str(e)\n\t\tAuthentication.exceptionLogger(errorMessage)\n\t\treasonData \u003d []\n\n\treturn reasonData",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "placeholder": {
            "text": "Select Code Name"
          },
          "search": {
            "noResultsText": "No code found"
          },
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "LblReasonCodeName"
        },
        "position": {
          "height": 32,
          "width": 95,
          "x": 26,
          "y": 270
        },
        "props": {
          "text": "Code Name",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblScanBadge_3"
        },
        "position": {
          "height": 12,
          "width": 10,
          "x": 101.5,
          "y": 279
        },
        "props": {
          "text": "*",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground",
            "color": "#FF0000"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblCodeType"
        },
        "position": {
          "height": 32,
          "width": 95,
          "x": 23.5,
          "y": 49
        },
        "props": {
          "text": "Code Type",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblScanBadge_4"
        },
        "position": {
          "height": 32,
          "width": 10,
          "x": 370,
          "y": 269
        },
        "props": {
          "text": "*",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground",
            "color": "#FF0000"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tself.getSibling(\"TxtReasonType\").props.text \u003d \u0027\u0027\n\tself.getSibling(\"TxtComment\").focus()"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "DropdownSelectpriority",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            }
          }
        },
        "position": {
          "height": 32,
          "width": 250,
          "x": 318.5,
          "y": 303
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "path": "../DropdowncodeName.props.value"
              },
              "transforms": [
                {
                  "code": "\ttry:\n\t\tif value !\u003d \"\":\n\t\t\tpriority  \u003d ProductionOperatorConsole.getRMpriorities()\t\n\t\telse:\n\t\t\tpriority\u003d []\n\texcept Exception as e:\n\t\terrorMessage\u003d \"Operator Console Downtime :- Exception while binding data to reason code dropdown.Exception : \" +  str(e)\n\t\tAuthentication.exceptionLogger(errorMessage)\n\t\treasonData \u003d []\n\n\treturn priority",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "placeholder": {
            "text": "Select Priority"
          },
          "search": {
            "noResultsText": "No priority found"
          },
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "LblOperation"
        },
        "position": {
          "height": 32,
          "width": 65,
          "x": 321,
          "y": 49
        },
        "props": {
          "text": "Operation",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblEqupment"
        },
        "position": {
          "height": 32,
          "width": 95,
          "x": 23.5,
          "y": 128
        },
        "props": {
          "text": "Machine",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tself.getSibling(\"DrpdownEquipment\").focus()\n\tself.getSibling(\"DrpdownEquipment\").props.value \u003d \u0027\u0027\n\tself.getSibling(\"DropdownCodeSubtype\").props.value \u003d \u0027\u0027\n\tself.getSibling(\"DropdowncodeName\").props.value \u003d \u0027\u0027\n\tself.getSibling(\"DropdownSelectpriority\").props.value \u003d \u0027\u0027\n\tself.getSibling(\"LblMakeName\").props.text \u003d \u0027\u0027\n\tself.getSibling(\"LblModelName\").props.text \u003d \u0027\u0027\n\tself.getSibling(\"LblMakeName\").custom.MakeId \u003d \u0027\u0027\n\tself.getSibling(\"LblModelName\").custom.ModelId \u003d \u0027\u0027\n\tself.getSibling(\"DrpdownEquipment\").props.options \u003d None\n\tself.getSibling(\"LblErrorMsg\").meta.visible \u003d False"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "DrpdownOperation",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            }
          }
        },
        "position": {
          "height": 32,
          "width": 250,
          "x": 318.5,
          "y": 83
        },
        "props": {
          "options": {
            "$": [
              "ds",
              192,
              1674175945622
            ],
            "$columns": [
              {
                "data": [],
                "name": "ReasonCodeId",
                "type": "Integer"
              },
              {
                "data": [],
                "name": "ReasonCodeName",
                "type": "String"
              }
            ]
          },
          "placeholder": {
            "text": "Select Operation"
          },
          "search": {
            "noResultsText": "No operation found"
          },
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "LblScanBadge_5"
        },
        "position": {
          "height": 32,
          "width": 10,
          "x": 76.5,
          "y": 126.5
        },
        "props": {
          "text": "*",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground",
            "color": "#FF0000"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblScanBadge_6"
        },
        "position": {
          "height": 32,
          "width": 10,
          "x": 386,
          "y": 49
        },
        "props": {
          "text": "*",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground",
            "color": "#FF0000"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblMake"
        },
        "position": {
          "height": 32,
          "width": 41,
          "x": 322,
          "y": 129
        },
        "props": {
          "text": "Make",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "custom": {
          "MakeId": ""
        },
        "meta": {
          "name": "LblMakeName"
        },
        "position": {
          "height": 32,
          "width": 248,
          "x": 318.5,
          "y": 161
        },
        "props": {
          "style": {
            "backgroundColor": "#D5D5D5BA",
            "classes": "Common/TextBox",
            "fontSize": 14,
            "fontWeight": "normal",
            "textAlign": "Left"
          }
        },
        "type": "ia.display.label"
      },
      {
        "custom": {
          "ModelId": ""
        },
        "meta": {
          "name": "LblModelName"
        },
        "position": {
          "height": 32,
          "width": 248,
          "x": 24,
          "y": 232
        },
        "props": {
          "style": {
            "backgroundColor": "#D5D5D5BA",
            "classes": "Common/TextBox",
            "fontSize": 14,
            "fontWeight": "normal",
            "textAlign": "Left"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblModel"
        },
        "position": {
          "height": 32,
          "width": 41,
          "x": 23.5,
          "y": 202
        },
        "props": {
          "text": "Model",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblReasonCodeType"
        },
        "position": {
          "height": 32,
          "width": 248,
          "x": 24,
          "y": 83
        },
        "props": {
          "style": {
            "backgroundColor": "#D5D5D5BA",
            "classes": "Common/TextBox",
            "fontSize": 14,
            "fontWeight": "normal",
            "textAlign": "Left"
          },
          "text": "Downtime Reason Code"
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblErrorMsg",
          "visible": false
        },
        "position": {
          "height": 13,
          "width": 524,
          "x": 32,
          "y": 433
        },
        "props": {
          "style": {
            "color": "#FF0000",
            "fontSize": 12
          },
          "text": "Label"
        },
        "type": "ia.display.label"
      },
      {
        "custom": {
          "MachineName": ""
        },
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\ttry:\n\t\tdefaultPath\u003dsystem.tag.read(\"[default]JMES_InternalTags/DafaultTagPath\").value\t\n\t\tself.getSibling(\"LblErrorMsg\").meta.visible \u003d False\n\t\tself.getSibling(\"DropdownCodeSubtype\").props.value \u003d \u0027\u0027\n\t\tself.getSibling(\"DropdowncodeName\").props.value \u003d \u0027\u0027\n\t\tself.getSibling(\"DropdownSelectpriority\").props.value \u003d \u0027\u0027\n\t\tself.getSibling(\"LblMakeName\").props.text \u003d \u0027\u0027\n\t\tself.getSibling(\"LblModelName\").props.text \u003d \u0027\u0027\n\t\tself.getSibling(\"LblMakeName\").custom.MakeId \u003d \u0027\u0027\n\t\tself.getSibling(\"LblModelName\").custom.ModelId \u003d \u0027\u0027\n\t\tuserId \u003d self.session.custom.UserId\n\t\tmachineId \u003d self.props.value\n\t\tMachineToolId \u003d machineId\n\t\tsystem.perspective.print(\u0027machineId :\u0027 + str(machineId))\n\t\tMakeModelList\u003dProductionOperatorConsole.getMakeModelbyMachineId(machineId)\n\t\tsystem.perspective.print(\u0027MakeModelList ---\u003e:\u0027 + str(MakeModelList))\n\t\tif len(MakeModelList) \u003e 0:\n\t\t\tData \u003d MakeModelList[0]\n\t\t\tself.getSibling(\"LblMakeName\").props.text\u003d Data.get(\u0027MakeName\u0027)\n\t\t\tself.getSibling(\"LblModelName\").props.text \u003d Data.get(\u0027ModelName\u0027)\n\t\t\tself.getSibling(\"LblMakeName\").custom.MakeId \u003d Data.get(\u0027MakeId\u0027)\n\t\t\tself.getSibling(\"LblModelName\").custom.ModelId \u003d Data.get(\u0027ModelId\u0027)\n\t\t\tmachineName \u003d Data.get(\u0027MachineName\u0027)\n\t\t\n#\t\t\ttagPath \u003d str(defaultPath) + str(machineName)+\u0027/IsRMGenerated.value\u0027\n\t\t\ttagPath \u003d str(defaultPath) + str(machineName)+\u0027/RepairAlarm.value\u0027\n\t\t\tsystem.perspective.print(\u0027machineId :\u0027 + str(machineId))\n\t\t\tMaintenanceTypeId \u003d 1\n\n#\t\t\tRMOrderDetails\u003d MaintenanceRMAPI.IsRMOrderPresent(machineId)\n\t\t\tRMOrderDetails \u003d ProductionOperatorConsole.IsMaintenanceOrderPresent(MachineToolId,MaintenanceTypeId)\n\t\t\t\n#\t\t\tIsRMCreated\u003dsystem.tag.read(tagPath).value\n\t\t\tIsRMCreated \u003d RMOrderDetails[0]\n\t\t\tOrderNo \u003d RMOrderDetails[1]\n\t\t\tsystem.perspective.print(\u0027IsRMCreated :\u0027 + str(IsRMCreated))\n\t\t\tif IsRMCreated \u003d\u003d True or IsRMCreated \u003d\u003d int(1) or IsRMCreated \u003d\u003d 1:\n\t\t\t\tself.getSibling(\"LblErrorMsg\").props.text \u003d \u0027RM order is already created for \u0027 + str(machineName) + \u0027 having order name \u0027 + str(OrderNo)\n\t\t\t\tself.getSibling(\"LblErrorMsg\").meta.visible \u003d True\n\t\t\telse:\n\t\t\t\tself.custom.MachineName\u003dData.get(\u0027MachineName\u0027)\n\t\t\t\tself.getSibling(\"DropdownCodeSubtype\").focus()\n\t\telse:\n\t\t\tself.getSibling(\"LblErrorMsg\").props.text \u003d \u0027Please configure make and model for selected machine\u0027\n\t\t\tself.getSibling(\"LblErrorMsg\").meta.visible \u003d True\n\texcept:\n\t\timport sys, os\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\tlineno \u003d tb.tb_lineno\n\t\terrorMessage \u003d \"\u0027Exception :: Production Operator Console: Machine Filter: on Action Performed \u0027:\"+ str(exc_obj) + \"Code Line No: \"+ str(lineno)\n\t\tsystem.perspective.print(errorMessage+\u0027 || Line No :\u0027 + str(lineno))\n\t\tAuthentication.exceptionLogger(errorMessage)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "DrpdownEquipment",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            }
          }
        },
        "position": {
          "height": 32,
          "width": 249,
          "x": 25,
          "y": 161
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "path": "../DrpdownOperation.props.value"
              },
              "transforms": [
                {
                  "code": "\tuserId \u003d self.session.custom.UserId\n\tselectedWorkorderId \u003d self.session.custom.WorkorderID\n\tselectedOperationId \u003d value\n\n\tif selectedOperationId !\u003d \"\":\n\t\tvalue \u003d MaintenanceRMAPI.getMachinesbyWorkorderId(selectedWorkorderId,selectedOperationId)\n\telse:\n\t\tvalue \u003d[]\n\treturn value",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "placeholder": {
            "text": "Select Machine"
          },
          "search": {
            "noResultsText": "No machine found"
          },
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.dropdown"
      }
    ],
    "meta": {
      "name": "root"
    },
    "position": {
      "x": 366,
      "y": 210
    },
    "type": "ia.container.coord"
  }
}