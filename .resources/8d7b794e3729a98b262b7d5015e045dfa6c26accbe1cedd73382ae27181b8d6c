{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\ttry:\n\t\tworkorderId \u003d self.session.custom.WorkorderID\n\t\tworkorderNumber\u003d self.session.custom.WoNumber\n\t\tself.getChild(\"root\").getChild(\"LblWONo\").props.text \u003d workorderNumber\t\n\t\t\t\n#\t\tmachineList \u003d ProductionOperatorConsole.getMachineListForTakeOut(workorderId)\n\t\tmachineList \u003d TakeIn_TakeOut.getMachineListForTakeOut(workorderId)\n\t\tself.getChild(\"root\").getChild(\"Table\").props.data \u003d machineList\n\n#-------------------Button Enable Disable-----------------------------\n\t\tworkorderId\u003dself.session.custom.WorkorderID\n\t\tActionCode \u003d 0  # Meaning of this Acive Code is 1 \u003d TakeIn ; 0 \u003d TakeOut\n\t\tresult \u003d TakeIn_TakeOut.takeIntakeOutButtonValidation(workorderId,ActionCode)\n\t\tsystem.perspective.print(\"result: \"+str(result))\n\t\tif result\u003d\u003d3:\n\t\t\tsystem.perspective.print(\"Enable unlink Machine Button\")\n\t\t\tself.getChild(\"root\").getChild(\"Btn_UnLinkMachine\").props.enabled\u003d1\n\t\t\tself.session.custom.TakeoutTableEnbDsp\u003d1\n\t\t\tself.getChild(\"root\").getChild(\"Checkbox\").props.enabled\u003d1\n\t\telif result\u003d\u003d4:\n\t\t\tsystem.perspective.print(\"Enable Complete Take-In Button\")\n\t\t\tself.getChild(\"root\").getChild(\"Btn_CompleteTakout\").props.enabled\u003d1\n\t\t\tself.session.custom.TakeoutTableEnbDs\u003d0\n\t\t\tself.getChild(\"root\").getChild(\"Checkbox\").props.enabled\u003d0\n\t\telif result\u003d\u003d5:\n\t\t\tsystem.perspective.print(\"Enable Both\")\t\n\texcept:\n\t\tsystem.perspective.print(\u0027Exception :: Take In On startup\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)\t\n\t\n\t\n\t"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "height": 661,
      "width": 1376
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "LblTitle"
        },
        "position": {
          "height": 38.98,
          "width": "100%"
        },
        "props": {
          "style": {
            "backgroundColor": "#4E8EC2"
          },
          "text": "Workorder Machine Take-Out",
          "textStyle": {
            "backgroundColor": "#4E8EC2",
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 8,
            "color": "#FAFAFB",
            "fontFamily": "Arial",
            "fontSize": 16,
            "fontWeight": "bold",
            "margin": 10,
            "textAlign": "Center",
            "whiteSpace": "normal"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Table"
        },
        "position": {
          "height": 538,
          "width": 1371,
          "x": 2,
          "y": 120.28
        },
        "props": {
          "bodyStyle": {
            "classes": "Table/RowsBorder"
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Sr No",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": ""
                },
                "title": "Sr No"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": false,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 30
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Operation",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Operation Name"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": false,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Machine Name",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Machine Name"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "MachineStatus",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": "Machine Status"
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "IsSelect",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": "",
                  "marginLeft": 0
                },
                "title": "Is Select"
              },
              "justify": "right",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": "",
                "marginLeft": 100
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {
                "rowData": "",
                "rowIndex": "",
                "value": ""
              },
              "viewPath": "Project_MES_Solution/ProductionOperatorConsole/Templates/MachineTakeOut",
              "visible": true,
              "width": ""
            }
          ],
          "data": {
            "$": [
              "ds",
              192,
              1681448023700
            ],
            "$columns": [
              {
                "data": [],
                "name": "Sr No",
                "type": "String"
              },
              {
                "data": [],
                "name": "Operation",
                "type": "String"
              },
              {
                "data": [],
                "name": "OperationId",
                "type": "String"
              },
              {
                "data": [],
                "name": "Machine Name",
                "type": "String"
              },
              {
                "data": [],
                "name": "MachineId",
                "type": "String"
              },
              {
                "data": [],
                "name": "Machine Status",
                "type": "String"
              },
              {
                "data": [],
                "name": "IsSelect",
                "type": "String"
              }
            ]
          },
          "emptyMessage": {
            "noData": {
              "text": "There is no machine to Take-Out."
            }
          },
          "headerStyle": {
            "classes": "Table/Header"
          },
          "pager": {
            "bottom": false
          },
          "rows": {
            "style": {
              "classes": "Table/Rowsmiddle"
            }
          },
          "selection": {
            "enableColumnSelection": true
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "ColumnUpdateTakeout",
              "pageScope": true,
              "script": "\ttry:\t\t\n\t\tisChecked \u003d payload[\u0027isChecked\u0027]\n\t\tselRow \u003d payload[\u0027SelctedRowIndex\u0027]\n\t\tupdatedValue \u003d isChecked    \n\t\tselColumn \u003d \u0027IsSelect\u0027\n\t\tdtSet \u003d self.props.data    \n\t\tupdateRowResultDs \u003d {selColumn:updatedValue}    \n\t\tresultpyData \u003d system.dataset.updateRow(dtSet,selRow,updateRowResultDs)        \n\t\tds \u003d system.dataset.toPyDataSet(resultpyData)    \n\t\tself.props.data \u003d ds  \n\n\texcept Exception as e:\n\t\t\tsystem.perspective.print(\u0027Exception :msg Handler updatig column\u0027)\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)\n\t\t\tsys.exit()",
              "sessionScope": false,
              "viewScope": false
            },
            {
              "messageType": "RefreshUnlinkTable",
              "pageScope": true,
              "script": "\ttry:\n\t\tsystem.perspective.print(\u0027In Takeout Msg Handler_Start\u0027)\n\t\tworkorderId \u003d self.session.custom.WorkorderID\t\t\t\n\t\tmachineList \u003d TakeIn_TakeOut.getMachineListForTakeOut(workorderId)\n\t\tself.props.data \u003d machineList\n\t\tsystem.perspective.print(\u0027In Takeout Msg Handler_End\u0027)\n#-------------------Button Enable Disable-----------------------------\n\t\tworkorderId\u003dself.session.custom.WorkorderID\n\t\tActionCode\u003d0\n\t\tresult\u003dTakeIn_TakeOut.takeIntakeOutButtonValidation(workorderId,ActionCode)\n\t\tsystem.perspective.print(\"result: \"+str(result))\n\t\tif result\u003d\u003d3:\n\t\t\tsystem.perspective.print(\"Enable unlink Machine Button\")\n\t\t\tself.getSibling(\"Btn_UnLinkMachine\").props.enabled\u003d1\n\t\t\tself.getSibling(\"Btn_CompleteTakout\").props.enabled\u003d0\t\t\t\n\t\t\tself.session.custom.TakeoutTableEnbDsp\u003d1\n\t\t\tself.getSibling(\"Checkbox\").props.enabled\u003d1\n\t\telif result\u003d\u003d4:\n\t\t\tsystem.perspective.print(\"Enable Complete Take-In Button\")\n\t\t\tself.getSibling(\"Btn_CompleteTakout\").props.enabled\u003d1\n\t\t\tself.getSibling(\"Btn_UnLinkMachine\").props.enabled\u003d0\n\t\t\tself.session.custom.TakeoutTableEnbDsp\u003d0\n#\t\t\tself.session.custom.TakeoutTableEnbDsp\n\t\t\tself.getSibling(\"Checkbox\").props.enabled\u003d0\n\t\telif result\u003d\u003d5:\n\t\t\tsystem.perspective.print(\"Enable Both\")\t\n\texcept:\n\t\tsystem.perspective.print(\u0027Exception :: Take In On startup\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      },
      {
        "meta": {
          "name": "LblDefault"
        },
        "position": {
          "height": 45.00000000000001,
          "rotate": {
            "anchor": "-167% 39%"
          },
          "width": 152,
          "x": 17.4,
          "y": 55.5
        },
        "props": {
          "text": "Workorder Number :",
          "textStyle": {
            "classes": "Widgets/WidgetsLabel",
            "fontSize": 15
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblWONo",
          "tooltip": {
            "location": "bottom-right"
          }
        },
        "position": {
          "height": 35,
          "width": 150,
          "x": 179.4,
          "y": 60.5
        },
        "props": {
          "style": {
            "classes": "Common/TextBox"
          },
          "textStyle": {
            "fontSize": "18l"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\ttry:\n\t\tuserId \u003d self.session.custom.UserId\n\t\tisTakeInFlag \u003d 0\n\t\tstatusFlag \u003d 4\n\t\ttableData \u003d self.getSibling(\"Table\").props.data\n\t\tworkorderId \u003d self.session.custom.WorkorderID\n\t\tmachinesList \u003d tableData.getRowCount()\n\t\tjsonParams \u003d []\n\t\tfor i in range(machinesList):\n\t\t\tisChecked \u003d tableData.getValueAt(i, \u0027IsSelect\u0027)\n\t\t\tif isChecked \u003d\u003d 1 or isChecked \u003d\u003d True:\n\t\t\t\tmachineId \u003d tableData.getValueAt(i, \u0027MachineId\u0027)\n\t\t\t\toperationId \u003d tableData.getValueAt(i, \u0027OperationId\u0027)\n\t\t\t\tparaList \u003d {\n\t\t\t     \t\t\t \"machineId\": machineId,\n\t\t\t     \t\t\t \"operationId\": operationId,\n\t\t\t     \t\t\t \"isSelected\": 1\t\t     \n\t\t\t  \t\t\t   }\n\t\t\t\tjsonParams.append(paraList)\t\n\t\tisMachineLink \u003d TakeIn_TakeOut.postMachineTakeIn_OutDetails(workorderId,jsonParams,isTakeInFlag,statusFlag,userId)\n\n\t\tif isMachineLink \u003d\u003d 1:\n\t\t\tmsgHandlerName \u003d \u0027RefreshUnlinkTable\u0027\n\t\t\tsystem.perspective.sendMessage(msgHandlerName, payload \u003d {\"value\":0,\"SelctedRowIndex\":0}, scope \u003d \"page\")\n\t\t\tmessageText \u003d \"Machine Takeout Completed.\"\n\t\t\tupdateStatus \u003d 1\n\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\telse:\n\t\t\tmessageText \u003d\"Fail to link the Machines .Connect to the administrator\"\n\t\t\tupdateStatus \u003d 0\n\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\n\texcept:\n\t\tsystem.perspective.print(\u0027Exception :Post machine Link-Unlink\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Btn_CompleteTakout",
          "visible": 0
        },
        "position": {
          "height": 40,
          "width": 228,
          "x": 903.5,
          "y": 58
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "enabled": false,
              "transforms": [
                {
                  "code": "\tif (str(value).lower() \u003d\u003d str(\u0027On-Hold\u0027).strip().lower()) or (str(value).lower() \u003d\u003d str(\u0027On Hold\u0027).strip().lower()) or (str(value).lower() \u003d\u003d str(\u0027In-Progress\u0027).strip().lower()):\n\t\treturn 1\n\telse:\n\t\treturn 0",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "enabled": false,
          "text": "Complete Take-Out"
        },
        "type": "ia.input.button"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\tsystem.perspective.closePopup(\u0027\u0027)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "IcnClose"
        },
        "position": {
          "height": 31,
          "width": 40,
          "x": 1331.95,
          "y": 4
        },
        "props": {
          "path": "material/close",
          "style": {
            "color": "#FFFFFF",
            "fontFamily": "Arial",
            "fontSize": 14
          }
        },
        "type": "ia.display.icon"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\ttry:\n\t\tuserId \u003d self.session.custom.UserId\n\t\tisTakeInFlag \u003d 0\n\t\tstatusFlag \u003d 3\n\t\tatLeastOneMachineSelectedFlag \u003d 0\n\t\t\n\t\ttableData \u003d self.getSibling(\"Table\").props.data\n\t\tworkorderId \u003d self.session.custom.WorkorderID\n\t\tmachinesList \u003d tableData.getRowCount()\n\t\tjsonParams \u003d []\n\t\tfor i in range(machinesList):\n\t\t\tisChecked \u003d tableData.getValueAt(i, \u0027IsSelect\u0027)\n\t\t\tif isChecked \u003d\u003d 1 or isChecked \u003d\u003d True:\n\t\t\t\tatLeastOneMachineSelectedFlag \u003d 1\n\t\t\t\tmachineId \u003d tableData.getValueAt(i, \u0027MachineId\u0027)\n\t\t\t\toperationId \u003d tableData.getValueAt(i, \u0027OperationId\u0027)\n\t\t\t\tparaList \u003d {\n\t\t\t     \t\t\t \"machineId\": machineId,\n\t\t\t     \t\t\t \"operationId\": operationId,\n\t\t\t     \t\t\t \"isSelected\": 1\t\t\t     \n\t\t\t  \t\t\t   }\n\t\t\t\tjsonParams.append(paraList)\t\n\t\tif \tatLeastOneMachineSelectedFlag \u003d\u003d 1:\t\n\t\t\ttry:\t\t\n\t\t\t\tisMachineLink \u003d TakeIn_TakeOut.postMachineTakeIn_OutDetails(workorderId,jsonParams,isTakeInFlag,statusFlag,userId)\n\t\t\texcept:\n\t\t\t\tpass\n\t\t\telse:\n\t\t\t\tif isMachineLink \u003d\u003d 1:\n\t\t\t\t\tmsgHandlerName \u003d \u0027RefreshUnlinkTable\u0027\n\t\t\t\t\tsystem.perspective.sendMessage(msgHandlerName, payload \u003d {\"value\":0,\"SelctedRowIndex\":0}, scope \u003d \"page\")\n\t\t\t\t\tmessageText \u003d \"Machine Unlinked Successfully.\"\n\t\t\t\t\tupdateStatus \u003d 1\n\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\telse:\n\t\t\t\t\tmessageText \u003d\"Fail to link the Machines .Connect to the administrator\"\n\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\telse:\n\t\t\tmessageText \u003d\"No Machine is selected for Takeout.Please select atleast one machine.\"\n\t\t\tupdateStatus \u003d 0\n\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\n\t\t\t\t\n\texcept:\n\t\tsystem.perspective.print(\u0027Exception :Post machine Link-Unlink\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Btn_UnLinkMachine",
          "visible": 0
        },
        "position": {
          "height": 40,
          "width": 228,
          "x": 903,
          "y": 58
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "enabled": false,
              "transforms": [
                {
                  "code": "\tif (str(value).lower() \u003d\u003d str(\u0027On-Hold\u0027).strip().lower()) or (str(value).lower() \u003d\u003d str(\u0027On Hold\u0027).strip().lower()) or (str(value).lower() \u003d\u003d str(\u0027In-Progress\u0027).strip().lower()):\n\t\treturn 1\n\telse:\n\t\treturn 0",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "enabled": false,
          "text": "Unlink Machines"
        },
        "type": "ia.input.button"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\ttry:\n\n\t\tupdatedValue\u003dself.props.selected\n\t\tselColumn\u003d\u0027IsSelect\u0027\n\t\tresultpyData\u003dself.getSibling(\"Table\").props.data \n\t\tresultpyData\u003dsystem.dataset.toPyDataSet(resultpyData)\n \n\t\tfor i in range(len(resultpyData)):\n\t\t\tselRow\u003di\n\t\t\tupdateRowResultDs \u003d {selColumn:updatedValue}    \n\t\t\tresultpyData \u003d system.dataset.updateRow(resultpyData,selRow,updateRowResultDs)        \n\t\t\tresultpyData\u003d system.dataset.toPyDataSet(resultpyData)    \n\t\tself.getSibling(\"Table\").props.data\u003dresultpyData\n\t\tsystem.perspective.print(\"Data Loaded Successfully\")\n\texcept:\n\t\t\tsystem.perspective.print(\u0027Exception:Select All\u0027)\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)\n\t\t\tsys.exit()\t\t\n\t\t\t"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Checkbox"
        },
        "position": {
          "height": 26,
          "width": 32,
          "x": 1187,
          "y": 120.265625
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "../Table.props.data"
              },
              "previewEnabled": false,
              "transforms": [
                {
                  "code": "\ttableDs\u003dsystem.dataset.toPyDataSet(value)\n\tif len(tableDs)\u003e0:\n\t\treturn 1\n\telse:\n\t\treturn 0",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "text": ""
        },
        "type": "ia.input.checkbox"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\ttry:\n\t\tuserId \u003d self.session.custom.UserId\n\t\tisTakeInFlag \u003d 0\n\t\tstatusFlag \u003d 6 #  1 \u003d In Progress WO Link MC ;2 \u003d In Progress WO LComplete TakeIn ;5 \u003d Not Started WO Complete Takein at one click ;6 \u003d Not Started WO Complete Takeout at one click\n\t\tatLeastOneMachineSelectedFlag \u003d 0\n\n\t\ttableData \u003d self.getSibling(\"Table\").props.data\n\t\tworkorderId \u003d self.session.custom.WorkorderID\n\t\tmachinesList \u003d tableData.getRowCount()\n\t\tjsonParams \u003d []\n\t\tsystem.perspective.print(\u0027Checkpoint 1\u0027)\n\t\tfor i in range(machinesList):\n\t\t\tsystem.perspective.print(\u0027Checkpoint 2\u0027)\n\t\t\tisChecked \u003d tableData.getValueAt(i, \u0027IsSelect\u0027)\n\t\t\tif isChecked \u003d\u003d 1 or isChecked \u003d\u003d True:\n\t\t\t\tsystem.perspective.print(\u0027Checkpoint 3\u0027)\n\t\t\t\tatLeastOneMachineSelectedFlag \u003d 1\n\t\t\t\tmachineId \u003d tableData.getValueAt(i, \u0027MachineId\u0027)\n\t\t\t\toperationId \u003d tableData.getValueAt(i, \u0027OperationId\u0027)\n\t\t\t\tparaList \u003d {\n\t\t\t     \t\t\t \"machineId\": machineId,\n\t\t\t     \t\t\t \"operationId\": operationId,\n\t\t\t     \t\t\t \"isSelected\": 1\t\t\t     \n\t\t\t  \t\t\t   }\n\t\t\t\tjsonParams.append(paraList)\t\n\t\t\t\tsystem.perspective.print(jsonParams)\n\t\tsystem.perspective.print(\u0027Checkpoint 4\u0027)\n\t\tif atLeastOneMachineSelectedFlag \u003d\u003d 1:\n\t\t\tsystem.perspective.print(\u0027Checkpoint 5\u0027)\n\t\t\tClubbedWo \u003d MaterialRequestAPI.getCNSClubbedWorkorderDetailsbyworkorderId(workorderId)\n\t\t\tIsWorkOrderClubbed \u003d ClubbedWo.getValueAt(0,\u0027IsWorkOrderClubbed\u0027)\n\t\t\tsystem.perspective.print(\u0027Checkpoint 6\u0027)\n\t\t\tif IsWorkOrderClubbed \u003d\u003d True or str(IsWorkOrderClubbed).lower() \u003d\u003d str(\"true\").lower():\n\t\t\t\tsystem.perspective.print(\"Print 1: CNS : In Clubbed Workorder\")\n\t\t\t\tprimaryWorkorderId \u003d ClubbedWo.getValueAt(0,\u0027PrimaryWorkOrderId\u0027)\n\t\t\t\tif workorderId\u003d\u003dprimaryWorkorderId:\n\t\t\t\t\tsystem.perspective.print(\u0027Checkpoint 7\u0027)\n\t\t\t\t\t\n\t\t\t\t\tTITOValidationFlag \u003d TakeIn_TakeOut.TITOLoadedMaterialValidation(workorderId,jsonParams,userId)\t\t\t\t\t\n\t\t\t\t\tsystem.perspective.print(\u0027TITO Validation:\u0027+str(TITOValidationFlag))\t\t\t\t\t\n\t\t\t\t\tQualityContainerValidation \u003d TITOValidationFlag.get(\u0027QualityContainerValidation\u0027)\n\t\t\t\t\tsystem.perspective.print(\u0027Checkpoint 8\u0027)\n\t\t\t\t\tLLContainerValidation \u003d TITOValidationFlag.get(\u0027LLContainerValidation\u0027)\n\t\t\t\t\tIsMachineRemainingCheck \u003d TITOValidationFlag.get(\u0027MachineRemainingCheck\u0027)\n\t\t\t\t\tRemainingQTYValidation \u003d TITOValidationFlag.get(\u0027RemainingQTYValidation\u0027)\n\t\t\t\t\tRemainingQTYValidation \u003d 1\n\t\t\t\t\tWorkorderStatus \u003d self.session.custom.woStatus\n\t\t\t\t\tif ((str(WorkorderStatus).lower() \u003d\u003d str(\u0027Not-Started\u0027).strip().lower()) or (str(WorkorderStatus).lower() \u003d\u003d str(\u0027Not Started\u0027).strip().lower())) or ((str(WorkorderStatus).lower() \u003d\u003d str(\u0027On-Hold\u0027).strip().lower()) or (str(WorkorderStatus).lower() \u003d\u003d str(\u0027On Hold\u0027).strip().lower())):\n\t\t\t\t\t\tIsMachineRemainingCheck \u003d 1\n\t\t\t\t\telse:\n\t\t\t\t\t\tpass\n\t\t\t\t\t\n\t\t\t\t\tsystem.perspective.print(\u0027IsMachineRemainingCheck:\u0027+str(IsMachineRemainingCheck))\n\t\t\t\t\tif QualityContainerValidation \u003d\u003d1 and LLContainerValidation \u003d\u003d1 and RemainingQTYValidation \u003d\u003d1 and IsMachineRemainingCheck \u003d\u003d1:\t\t\n\t\t\t\t\t\tsystem.perspective.print(\u0027Checkpoint 10\u0027)\t\n\t\t\t\t\t\ttry:\t\n\t\t\t\t\t\t\tsystem.perspective.print(\u0027Checkpoint 11\u0027)\t\t\t\n\t\t\t\t\t\t\tisMachineLink \u003d TakeIn_TakeOut.postMachineTakeIn_OutDetails(workorderId,jsonParams,isTakeInFlag,statusFlag,userId)\n\t\t\t\t\t\t\tsystem.perspective.print(\u0027Take out Completed.\u0027)\n\t\t\t\t\t\texcept:\n\t\t\t\t\t\t\tsystem.perspective.print(\u0027Error while posting TakeOut details. Please check API parameters.\u0027)\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tif isMachineLink \u003d\u003d 1:\n\t\t\t\t\t\t\t\tmsgHandlerName \u003d \u0027RefreshUnlinkTable\u0027\n\t\t\t\t\t\t\t\tsystem.perspective.sendMessage(msgHandlerName, payload \u003d {\"value\":0,\"SelctedRowIndex\":0}, scope \u003d \"page\")\n\t\t\t\t\t\t\t\tmessageText \u003d \"Machine Unlinked Successfully.\"\n\t\t\t\t\t\t\t\tupdateStatus \u003d 1\n\t\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\telse:\n\t\t\t\t\t\t\t\tmessageText \u003d\"Fail to link the Machines .Connect to the administrator\"\n\t\t\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\telse:\n\t\t\t\t\t\tif QualityContainerValidation\u003d\u003d0:\n\t\t\t\t\t\t\tmessageText \u003d\"Please approve the containers from quality.\"\n\t\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpass\t\t\t\t\t\t\n\t\t\t\t\t\telif LLContainerValidation\u003d\u003d0:\n\t\t\t\t\t\t\tmessageText \u003d\"Please complete the material Backflush from line lead Console.\"\n\t\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpass\n\t\t\t\t\t\telif RemainingQTYValidation \u003d\u003d 0:\t\n\t\t\t\t\t\t\t# Need to call popup which will display list of machines and material to be returned.\t\t\n\t\t\t\t\t\t\tmessageText \u003d\"Please complete the material return from PDA before machine takout.\"\n\t\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpass\n\t\t\t\t\t\telif IsMachineRemainingCheck \u003d\u003d 0:\t\n\t\t\t\t\t\t\t# Need to call popup which will display list of machines and material to be returned.\t\t\n\t\t\t\t\t\t\tmessageText \u003d\"Unable to fulfill the machine takeout request since there will be no machines remaining in the work order after this operation.\"\n\t\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tpass\n\t\t\t\telse:\n\t\t\t\t\tPrimaryWorkorderNo \u003d ClubbedWo.getValueAt(0,\u0027PrimaryWorkorderNo\u0027)\n\t\t\t\t\tmessageText \u003d \u0027Please select and take out the machine against main workorder :\u0027 + str(PrimaryWorkorderNo)\n\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\telse:\n\t\t\t\tTITOValidationFlag \u003d TakeIn_TakeOut.TITOLoadedMaterialValidation(workorderId,jsonParams,userId)\t\t\t\t\t\n\t\t\t\tsystem.perspective.print(\u0027TITO Validation:\u0027+str(TITOValidationFlag))\t\t\t\t\t\n\t\t\t\tQualityContainerValidation \u003d TITOValidationFlag.get(\u0027QualityContainerValidation\u0027)\n\t\t\t\tsystem.perspective.print(\u0027Checkpoint 8\u0027)\n\t\t\t\tLLContainerValidation \u003d TITOValidationFlag.get(\u0027LLContainerValidation\u0027)\n\t\t\t\tIsMachineRemainingCheck \u003d TITOValidationFlag.get(\u0027MachineRemainingCheck\u0027)\n\t\t\t\tRemainingQTYValidation \u003d TITOValidationFlag.get(\u0027RemainingQTYValidation\u0027)\n\t\t\t\tRemainingQTYValidation \u003d 1\t\n#\t\t\t\tIsMachineRemainingCheck \u003d 1\t\t\t\t\n\t\t\t\tWorkorderStatus \u003d self.session.custom.woStatus\n\t\t\t\tif ((str(WorkorderStatus).lower() \u003d\u003d str(\u0027Not-Started\u0027).strip().lower()) or (str(WorkorderStatus).lower() \u003d\u003d str(\u0027Not Started\u0027).strip().lower())) or ((str(WorkorderStatus).lower() \u003d\u003d str(\u0027On-Hold\u0027).strip().lower()) or (str(WorkorderStatus).lower() \u003d\u003d str(\u0027On Hold\u0027).strip().lower())):\n\t\t\t\t\tIsMachineRemainingCheck \u003d 1\n\t\t\t\telse:\n\t\t\t\t\tpass\n\t\t\t\tif QualityContainerValidation \u003d\u003d1 and LLContainerValidation \u003d\u003d1 and RemainingQTYValidation \u003d\u003d1 and IsMachineRemainingCheck \u003d\u003d1:\t\t\t\n\t\t\t\t\ttry:\t\t\t\t\n\t\t\t\t\t\tisMachineLink \u003d TakeIn_TakeOut.postMachineTakeIn_OutDetails(workorderId,jsonParams,isTakeInFlag,statusFlag,userId)\t\t\t\t\t\n\t\t\t\t\t\tsystem.perspective.print(\"Machine takeout completed.\")\n\t\t\t\t\texcept:\n\t\t\t\t\t\tsystem.perspective.print(\u0027Error while posting TakeOut details. Please check API parameters.\u0027)\n\t\t\t\t\telse:\n\t\t\t\t\t\tif isMachineLink \u003d\u003d 1:\n\t\t\t\t\t\t\tmsgHandlerName \u003d \u0027RefreshUnlinkTable\u0027\n\t\t\t\t\t\t\tsystem.perspective.sendMessage(msgHandlerName, payload \u003d {\"value\":0,\"SelctedRowIndex\":0}, scope \u003d \"page\")\n\t\t\t\t\t\t\tmessageText \u003d \"Machine Unlinked Successfully.\"\n\t\t\t\t\t\t\tupdateStatus \u003d 1\n\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\telse:\n\t\t\t\t\t\t\tmessageText \u003d\"Fail to link the Machines .Connect to the administrator\"\n\t\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\telse:\t\t\t\t\t\t\n\t\t\t\t\tif QualityContainerValidation\u003d\u003d0:\n\t\t\t\t\t\tmessageText \u003d\"Please approve the containers from quality.\"\n\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tpass\t\t\t\t\t\t\n\t\t\t\t\tif LLContainerValidation\u003d\u003d0:\n\t\t\t\t\t\tmessageText \u003d\"Please complete the material Backflush from line lead Console.\"\n\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tpass\n\t\t\t\t\tif RemainingQTYValidation \u003d\u003d 0:\t\n\t\t\t\t\t\t# Need to call popup which will display list of machines and material to be returned.\t\t\n\t\t\t\t\t\tmessageText \u003d\"Please complete the material return from PDA before machine takout.\"\n\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tpass\n\t\t\t\t\telif IsMachineRemainingCheck \u003d\u003d 0:\t\n\t\t\t\t\t\t# Need to call popup which will display list of machines and material to be returned.\t\t\n\t\t\t\t\t\tmessageText \u003d\"Unable to fulfill the machine takeout request since there will be no machines remaining in the work order after this operation.\"\n\t\t\t\t\t\tupdateStatus \u003d 0\n\t\t\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\tpass\n\t\telse:\n\t\t\tmessageText \u003d\"No Machine is selected for Takeout.Please select atleast one machine.\"\n\t\t\tupdateStatus \u003d 0\n\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\n\texcept:\n\t\tsystem.perspective.print(\u0027Exception :Post machine Link-Unlink\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Btn_LinkAndTakeOut",
          "visible": 1
        },
        "position": {
          "height": 40,
          "width": 168,
          "x": 1144,
          "y": 58
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "enabled": false,
              "transforms": [
                {
                  "code": "\tif (str(value).lower() \u003d\u003d str(\u0027Not-Started\u0027).strip().lower()) or (str(value).lower() \u003d\u003d str(\u0027Not Started\u0027).strip().lower()):\n\t\treturn 1\n\telse:\n\t\treturn 0",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "text": "Take Out Machines"
        },
        "type": "ia.input.button"
      },
      {
        "meta": {
          "name": "LblDefault_0"
        },
        "position": {
          "height": 45,
          "rotate": {
            "anchor": "-167% 39%"
          },
          "width": 135,
          "x": 339.4,
          "y": 55.5
        },
        "props": {
          "text": "Workorder Status :",
          "textStyle": {
            "classes": "Widgets/WidgetsLabel",
            "fontSize": 15
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "LblWONo_0",
          "tooltip": {
            "location": "bottom-right"
          }
        },
        "position": {
          "height": 35,
          "width": 150,
          "x": 484.4,
          "y": 60.5
        },
        "propConfig": {
          "props.text": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "type": "property"
            }
          }
        },
        "props": {
          "style": {
            "classes": "Common/TextBox"
          },
          "textStyle": {
            "fontSize": "18l"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "script": "\ttry:\n\t\tuserId \u003d self.session.custom.UserId\n\t\tworkorderId \u003d \tself.session.custom.WorkorderID\t\n\t\ttableData \u003d self.getSibling(\"Table\").props.data\n\t\tmachinesList \u003d tableData.getRowCount()\n\t\tatLeastOneMachineSelectedFlag \u003d 0\n\t\tjsonParams \u003d []\n\t\tfor i in range(machinesList):\n\t\t\tisChecked \u003d tableData.getValueAt(i, \u0027IsSelect\u0027)\n\t\t\tif isChecked \u003d\u003d 1 or isChecked \u003d\u003d True:\t\t\t\t\t\t\t\t\n\t\t\t\tmachineId \u003d tableData.getValueAt(i, \u0027MachineId\u0027)\t\n\t\t\t\tatLeastOneMachineSelectedFlag \u003d 1\n\t\t\t\tparaList \u003d{\n\t\t\t  \t\t\t         \"machineId\": machineId\n\t\t\t  \t\t\t      }\n\t\t\t\t  \t\t\t     \n\t\t\t\tjsonParams.append(paraList)\t\n\t\tsystem.perspective.print(\"Selected Machine List:\"+str(jsonParams))\t\t\n\t\tif atLeastOneMachineSelectedFlag \u003d\u003d 1:\t\n\t\t\ttry:\t\t\n\t\t\t\tcontaierUpdate \u003d TakeIn_TakeOut.UpdateContainersforMachine(workorderId,userId,jsonParams)\n\t\t\texcept:\n\t\t\t\tsystem.perspective.print(\u0027Error: Not able to genrate partial container. Function Execution failed.\u0027)\n\t\t\tif contaierUpdate\u003d\u003d1:\n\t\t\t\tsystem.perspective.print(\"Containers updated Successfully\")\t\n\t\t\t\tmessageText \u003d \"Containers Updated Successfully\"\n\t\t\t\tupdateStatus \u003d 1\n\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\t\t\telse:\n\t\t\t\n\t\t\t\tsystem.perspective.print(\"Containers updated Fail\")\n\t\t\t\tmessageText \u003d \"Fail to update containers\"\n\t\t\t\tupdateStatus \u003d 0\n\t\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\telse:\n\t\t\tmessageText \u003d\"Please select atleast one machine.\"\n\t\t\tupdateStatus \u003d 0\n\t\t\tsystem.perspective.openPopup(\u0027SaveUpdatePopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/ValidationPopups/SaveUpdatePopup\u0027,params\u003d{\"MessageText\":messageText,\"updaateStatus\":updateStatus},draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)\t\t\t\t\t\t\t\t\t\t\t\n\texcept:\n\t\tsystem.perspective.print(\u0027Exception :Updating Containers\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Btn_UpdateContainers"
        },
        "position": {
          "height": 40,
          "width": 228,
          "x": 903,
          "y": 58
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "path": "session.custom.woStatus"
              },
              "transforms": [
                {
                  "code": "\tif (str(value).lower() \u003d\u003d str(\u0027Not-Started\u0027).strip().lower()) or (str(value).lower() \u003d\u003d str(\u0027Not Started\u0027).strip().lower()):\n\t\treturn 0\n\telse:\n\t\treturn 1\n\t\t\t",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "text": "Complete Partial Containers"
        },
        "type": "ia.input.button"
      }
    ],
    "meta": {
      "name": "root"
    },
    "position": {
      "x": -7,
      "y": -5
    },
    "props": {
      "style": {
        "backgroundColor": "#FFFFFF"
      }
    },
    "type": "ia.container.coord"
  }
}