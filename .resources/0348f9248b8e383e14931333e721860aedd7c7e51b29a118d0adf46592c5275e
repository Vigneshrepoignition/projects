{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\ttry:\t\n\t\tuserId \u003d self.session.custom.UserId\n#\t\tuserId \u003d \n\t\tself.getChild(\"root\").getChild(\"DrpSelectLine\").props.value \u003d \"\"\n\t\tself.getChild(\"root\").getChild(\"DrpSelectMachine\").props.value \u003d \"\"\n\t\ttry:\n\t\t\tdrpDwnDataAutoLineList \u003d WorkOrderDetailsAPI.getAutoLinesByUserID(userId)\t\n\t\t\tself.getChild(\"root\").getChild(\"DrpSelectLine\").props.options \u003d drpDwnDataAutoLineList \n\t\texcept:\n\t\t\tpass\n\texcept:\n\t\tpass"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "height": 596,
      "width": 948
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "LblTitle"
        },
        "position": {
          "height": 31.8,
          "width": 948
        },
        "props": {
          "style": {
            "backgroundColor": "#4E8EC2"
          },
          "text": "Link Machine Paramter",
          "textStyle": {
            "backgroundColor": "#4E8EC2",
            "borderTopLeftRadius": 8,
            "borderTopRightRadius": 8,
            "color": "#FAFAFB",
            "fontFamily": "Arial",
            "fontSize": 16,
            "fontWeight": "bold",
            "margin": 10,
            "textAlign": "Center",
            "whiteSpace": "normal"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "dom": {
            "onClick": [
              {
                "config": {
                  "draggable": false,
                  "modal": false,
                  "overlayDismiss": false,
                  "resizable": false,
                  "showCloseIcon": false,
                  "type": "close",
                  "viewPath": "Project_MES_Solution/ProductionOperatorConsole/PopUps/PopupLinkMachineParameter",
                  "viewportBound": false
                },
                "scope": "C",
                "type": "popup"
              },
              {
                "config": {
                  "script": "\tsystem.perspective.closePopup(\u0027\u0027)"
                },
                "scope": "G",
                "type": "script"
              }
            ]
          }
        },
        "meta": {
          "name": "IcnClose"
        },
        "position": {
          "height": 30,
          "rotate": {
            "anchor": "50% 38%"
          },
          "width": 42,
          "x": 905.39,
          "y": -0.5
        },
        "props": {
          "color": "#FFFFFF",
          "path": "material/close"
        },
        "type": "ia.display.icon"
      },
      {
        "events": {
          "component": {
            "onEditCellCommit": {
              "config": {
                "script": "#\ttry:\t\n#\t\tsystem.perspective.print(\"Material Availability Checklist Function start \")\n#\t\tdefineKeyColumn \u003d \"componentName\"\n#\t#----------------- get selected cell value,row number,column number -----------------\t\n#\t\tupdatedValue\u003devent.value\t\n#\t\tselRow\u003devent.row\t\n#\t\tselColumn\u003dself.props.selection.selectedColumn\n#\t#-------------------------------------- End ----------------------------------------\n#\t\t\n#\t#----------------- update data back in existing table dataset ----------------------\t\n#\t\tdtSet\u003dself.props.data\n#\t\tupdateRowResultDs \u003d {selColumn:updatedValue}\n#\t\tresultpyData \u003d system.dataset.updateRow(dtSet,selRow,updateRowResultDs)\t\n#\t\tds\u003d system.dataset.toPyDataSet(resultpyData)\n#\t\tself.props.data\u003dds\n#\t#-------------------------------------- End -----------------------------------------\t\t\n#\t\ttabldata\u003dself.props.data\t\n#\t\tval\u003dtabldata.getValueAt(selRow, selColumn)\n#\t\tComponents\u003dtabldata.getValueAt(selRow,defineKeyColumn)\n#\t\tcomponentData\u003d[val,Components]\n#\t\tsystem.perspective.print(componentData)\t\t\t\n#\t#--------------------------------------------------------------------------------------\t\n#\t\tWoNumber \u003dself.session.custom.WoNumber\t\n#\t\tItem \u003d self.session.custom.Item\n#\t\tRevision \u003d self.session.custom.Revision\t\t\t\t\t\t\t\t\t\t\n#\t\ttry:\n#\t\t\tpartName \u003d tabldata.getValueAt(selRow,\"componentName\")\n#\t\texcept:\n#\t\t\tsystem.perspective.print(\"Unable to read selectedParameter\")\n#\t\t\tpass\t\t\n#\t\ttry:\n#\t\t\tisChecked \u003d tabldata.getValueAt(selRow,\"isChecked\")\t\n#\t\texcept:\n#\t\t\tsystem.perspective.print(\"Unable to read selectedTypeId\")\n#\t\t\tpass\t\n#\t\tuserId \u003d self.session.custom.UserId\n#\t\tresult \u003d WorkOrderDetailsAPI.postChecklistDetailsForMaterialAvailability(WoNumber,Item,Revision,partName,isChecked,userId)\t\t\n#\t#-------------------------------------Validation Check --------------\t\t\t\t\n#\t\tisTableEmpty \u003d tabldata.getRowCount()\t\n#\t\tif isTableEmpty\u003e0:\t\t\n#\t\t\tcolNameForMaterialCheckList \u003d tabldata.getColumnIndex(\"isChecked\")\t\n#\t\t\tcheckList \u003d tabldata.getColumnAsList(colNameForMaterialCheckList)\n#\t\t\tsystem.perspective.print(\"Material Availablity Checklist Data Null Check: \"+str(checkList))\n#\t\t\tchecklistFalseCount \u003d checkList.count(\"false\")\n#\t\t\tchecklistNullCount \u003d checkList.count(\"\")\n#\t\t\tchecklistZeroCount \u003d checkList.count(0)\n#\t\t\tsystem.perspective.print(\"Count Values: \"+str(checklistFalseCount)+\"|\"+str(checklistNullCount)+\"|\"+str(checklistZeroCount))\n#\t\t\tif checklistNullCount\u003e0 or checklistFalseCount\u003e0 or checklistZeroCount\u003e0:\n#\t\t\t\tself.session.custom.ChecklistMaterialValidation \u003d 0\n#\t\t\telse:\n#\t\t\t\tself.session.custom.ChecklistMaterialValidation \u003d 1\n#\t\telse:\n#\t\t\tself.session.custom.ChecklistMaterialValidation \u003d 1\t\n#\texcept:\n#\t\tpass"
              },
              "enabled": false,
              "scope": "G",
              "type": "script"
            },
            "onRowClick": {
              "config": {
                "script": "\ttry:\n\t\tif self.props.selection.selectedColumn\u003d\u003d\u0027isChecked\u0027:\n\t\t\tselColumn\u003dself.props.selection.selectedColumn\n\t\t\tselRow\u003dself.props.selection.selectedRow\n\t\t\trowValues\u003devent.value\n\t\t\tdefineKeyColumn \u003d \"componentName\"\n\t\t\t#----------------- get selected cell value,row number,column number -----------------  \n\t\t\tupdatedValue\u003drowValues[\u0027isChecked\u0027]\n\t\t\tif updatedValue\u003d\u003dTrue or updatedValue\u003d\u003d1:\n\t\t\t\tupdatedValue\u003d0\n\t\t\telse:\n\t\t\t\tupdatedValue\u003d1\t\n\t\t\tselRow\u003devent.row \n\t\t\t\n\t\t\n\t\t#----------------- update data back in existing table dataset ----------------------\t\n\t\t\tdtSet\u003dself.props.data\n\t\t\tupdateRowResultDs \u003d {selColumn:updatedValue}\n\t\t\tresultpyData \u003d system.dataset.updateRow(dtSet,selRow,updateRowResultDs)\t\n\t\t\tds\u003d system.dataset.toPyDataSet(resultpyData)\n\t\t\tself.props.data\u003dds\n\t\t\tself.props.selection.selectedColumn\u003dNone\n\t\t#-------------------------------------- End -----------------------------------------\t\t\n\n\t\t\ttabldata\u003dself.props.data\t\n\t\t\tval\u003dtabldata.getValueAt(selRow, selColumn)\n\t\t\tComponents\u003dtabldata.getValueAt(selRow,defineKeyColumn)\n\t\t\tcomponentData\u003d[val,Components]\n\n\t\t#--------------------------------------------------------------------------------------\t\n\t\t\tWoNumber \u003dself.session.custom.WoNumber\t\n\t\t\tItem \u003d self.session.custom.Item\n\t\t\tRevision \u003d self.session.custom.Revision\t\t\t\t\t\t\t\t\n\t\t\ttry:\n\t\t\t\tpartName \u003d tabldata.getValueAt(selRow,\"componentName\")\n\t\t\texcept:\n\t\t\t\tsystem.perspective.print(\"Unable to read selectedParameter\")\n\t\t\t\tpass\t\t\n\t\t\ttry:\n\t\t\t\tisChecked \u003d tabldata.getValueAt(selRow,\"isChecked\")\t\n\t\t\texcept:\n\t\t\t\tsystem.perspective.print(\"Unable to read selectedTypeId\")\n\t\t\t\tpass\t\n\t\t\tuserId \u003d self.session.custom.UserId\n\t\t\tresult \u003d WorkOrderDetailsAPI.postChecklistDetailsForMaterialAvailability(WoNumber,Item,Revision,partName,isChecked,userId)\n\t\t\tsystem.perspective.print(\"post checklist details material availability Result: \" + str(result))\n\t\t#-------------------------------------Validation Check --------------\t\t\t\t\n\t\t\ttabldata\u003dself.props.data\t\n\t\t\tisTableEmpty \u003d tabldata.getRowCount()\t\n\t\t\tif isTableEmpty\u003e0:\t\t\n\t\t\t\tcolNameForMaterialCheckList \u003d tabldata.getColumnIndex(\"isChecked\")\t\n\t\t\t\tcheckList \u003d tabldata.getColumnAsList(colNameForMaterialCheckList)\n\n\t\t\t\tchecklistFalseCount \u003d checkList.count(\"false\")\n\t\t\t\tchecklistNullCount \u003d checkList.count(\"\")\n\t\t\t\tchecklistZeroCount \u003d checkList.count(0)\n#\t\t\t\tsystem.perspective.print(\"Count Values: \"+str(checklistFalseCount)+\"|\"+str(checklistNullCount)+\"|\"+str(checklistZeroCount))\n\t\t\t\tif checklistNullCount\u003e0 or checklistFalseCount\u003e0 or checklistZeroCount\u003e0:\n\t\t\t\t\tself.session.custom.ChecklistMaterialValidation \u003d False\n\t\t\t\telse:\n\t\t\t\t\tself.session.custom.ChecklistMaterialValidation \u003d True\n\t\t\telse:\n\t\t\t\tself.session.custom.ChecklistMaterialValidation \u003d True\t\n\n\texcept:\t\t\n\t\timport sys, os\n\t\terrorMessage\u003dscriptName  +\u0027 Exception : \u0027+  str(sys.exc_info()[1])\n\t\tAuthentication.exceptionLogger(errorMessage)"
              },
              "enabled": false,
              "scope": "G",
              "type": "script"
            }
          },
          "dom": {
            "onMouseOver": {
              "config": {
                "script": "\tif self.props.selection.selectedColumn\u003d\u003d\u0027isChecked\u0027:\n\t\tself.props.columns[3].editable\u003d0\n\telse:\n\t\tself.props.columns[3].editable\u003d1"
              },
              "enabled": false,
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "TblMachineParams"
        },
        "position": {
          "height": 426,
          "width": 918.99,
          "x": 14.41,
          "y": 157.25
        },
        "props": {
          "bodyStyle": {
            "classes": "Table/RowsBorder"
          },
          "cells": {
            "allowEditOn": "single-click"
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "SrNo",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 30
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "MachineName",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 80
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "ParameterId",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": 0,
              "field": "ParameterName",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "ParameterDescription",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {
                "column": "value",
                "columnIndex": "value",
                "row": "value",
                "rowData": "value",
                "rowIndex": "value"
              },
              "viewPath": "Project_MES_Solution/ProductionOperatorConsole/Templates/TxtParameterDescription",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "ParameterDescriptionId",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            }
          ],
          "dragOrderable": false,
          "emptyMessage": {
            "noData": {
              "icon": {
                "color": "#C0C0C0"
              },
              "text": "Machine Parameters are not available"
            }
          },
          "headerStyle": {
            "classes": "Table/Header"
          },
          "pager": {
            "bottom": false
          },
          "rows": {
            "style": {
              "classes": "Table/Rowsmiddle"
            }
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "UpdateParamDesc",
              "pageScope": true,
              "script": "\tsystem.perspective.print(\u0027Inside Messge HAndeler\u0027)\n#\tsystem.perspective.sendMessage(messageType,payload \u003d {\"columnName\":columnName,\"updatedText\":text,\"SelctedRow\":SelctedRow},scope \u003d \"page\")\n\ttry:\n\t\tscriptName \u003d \"POC: ADD PARAMETER DESC\"\n\t\tuserId \u003d self.session.custom.UserId\n\t\tdtSet\u003dself.props.data\n\t\tselRow\u003dpayload[\u0027SelctedRow\u0027]\n\t\tselColumn\u003dpayload[\u0027columnName\u0027]\n\t\tparamDesc\u003d payload[\u0027updatedText\u0027]\n\t\n\t\tsystem.perspective.print(\"paramDesc from Payload is : \" + str(paramDesc))\n\t\tupdateRowResultDs \u003d {\"ParameterDescription\":paramDesc}\n\t\tresultpyData \u003d system.dataset.updateRow(dtSet,selRow,updateRowResultDs)\n\t\tds\u003d system.dataset.toPyDataSet(resultpyData)\n\t\tself.props.data\u003dds\n\t\tdtSet \u003dself.props.data\n\t\tDescription \u003d dtSet.getValueAt(selRow,\"ParameterDescription\")\n\t\tsystem.perspective.print(\"paramDesc after is  : \" + str(Description))\n\t\tparameterDescriptionId \u003d dtSet.getValueAt(selRow,\"parameterDescriptionId\")\n\t\tsystem.perspective.print(\"parameterDescriptionId after is  : \" + str(parameterDescriptionId))\n\t\tsubmit\u003dProductionOperatorConsole.postParameterDescription(parameterDescriptionId,Description,userId)\n\t\tsystem.perspective.print(\"paramDesc submit is  : \" + str(submit))\n\t\tself.getSibling(\"BtnSave\").props.enabled \u003d 1\n\t\t\t\n\texcept:\n\t\timport sys, os\n\t\terrorMessage\u003dscriptName  +\u0027 Exception : \u0027+  str(sys.exc_info()[1])\n\t\tAuthentication.exceptionLogger(errorMessage)",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      },
      {
        "meta": {
          "name": "DrpSelectLine"
        },
        "position": {
          "height": 38,
          "width": 306,
          "x": 14.41111068725586,
          "y": 90.0138931274414
        },
        "props": {
          "options": {
            "$": [
              "ds",
              192,
              1676284887385
            ],
            "$columns": [
              {
                "data": [],
                "name": "LineId",
                "type": "String"
              },
              {
                "data": [],
                "name": "LineName",
                "type": "String"
              }
            ]
          },
          "placeholder": {
            "text": "Select Line"
          },
          "search": {
            "noResultsText": "No lines found"
          },
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "Lbl"
        },
        "position": {
          "height": 27.000000000000007,
          "width": 75,
          "x": 14.41,
          "y": 54.01
        },
        "props": {
          "text": "Select Line",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\t\ttry:\t\t\t\n\t\t\tmachineName \u003d str(self.props.value).strip()\n\t\t\tsystem.perspective.print(\u0027MachineName :\u0027 + str(self.props.value))\n\t\t\tmachineName \u003d str(self.props.value)\n\t\t\tparameterDetails \u003dProductionOperatorConsole.getMachineParameters(machineName)\n\t\t\tsystem.perspective.print(\u0027parameterDetails :\u0027 + str(parameterDetails))\n\t\t\tself.getSibling(\"TblMachineParams\").props.data\u003dparameterDetails\n\t\t\tself.getSibling(\"BtnSave\").props.enabled \u003d 0\n\t\texcept:\n\t\t\tpass"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "DrpSelectMachine"
        },
        "position": {
          "height": 39,
          "width": 307,
          "x": 394.299,
          "y": 88.9965
        },
        "propConfig": {
          "props.options": {
            "binding": {
              "config": {
                "path": "../DrpSelectLine.props.value"
              },
              "transforms": [
                {
                  "code": "\tlineID \u003d value\n\ttry:\n\t\tlineID \u003d value\n\t\tvalue \u003d ProductionOperatorConsole.getMachineLineWise(lineID)\n\texcept Exception as e:\n\t\tvalue \u003d \u0027\u0027\n\t\tscriptName \u003d \"Machine Status Console:\"\n\t\terrorMessage\u003dscriptName  +\u0027 Exception - \u0027+  str(e)\n\t\tAuthentication.exceptionLogger(errorMessage)\t\n\treturn value",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "placeholder": {
            "text": "Select Machine"
          },
          "search": {
            "noResultsText": "No machine found"
          },
          "style": {
            "classes": "Common/TextBox"
          }
        },
        "type": "ia.input.dropdown"
      },
      {
        "meta": {
          "name": "Lbl_0"
        },
        "position": {
          "height": 28,
          "width": 99,
          "x": 394.3,
          "y": 53
        },
        "props": {
          "text": "Select Machine",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Lbl_1"
        },
        "position": {
          "height": 28.000000000000007,
          "width": 11,
          "x": 84.411,
          "y": 55.0013
        },
        "props": {
          "text": "*",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground",
            "color": "#FF0000"
          }
        },
        "type": "ia.display.label"
      },
      {
        "meta": {
          "name": "Lbl_2"
        },
        "position": {
          "height": 28,
          "width": 11,
          "x": 491.009,
          "y": 54.0087
        },
        "props": {
          "text": "*",
          "textStyle": {
            "classes": "Common/Label_WithOutBackground",
            "color": "#FF0000"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\ttry:\n\t\tuserId \u003d self.session.custom.UserId\n\t\tself.props.enabled \u003d 0\n\t\t\n\texcept:\n\t\tsystem.perspective.print(\"Exception:: Complete Workorder\")\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)\n"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "BtnSave",
          "tooltip": {
            "location": "bottom-right",
            "style": {
              "classes": "Common/ToolTip"
            },
            "text": "Click To Complete"
          },
          "visible": false
        },
        "position": {
          "height": 35,
          "width": 100,
          "x": 822.932750946045,
          "y": 46.94970362548828
        },
        "propConfig": {
          "props.style.backgroundColor": {
            "binding": {
              "config": {
                "path": "this.props.enabled"
              },
              "transforms": [
                {
                  "code": "\tif value \u003d\u003d True:\n\t\tvalue \u003d \"#3888CC\"\n\t\tself.props.style.borderColor \u003d \"#3888CC\"\n\telse:\n\t\tvalue \u003d str(self.session.custom.disableBtncolour)\n\t\tself.props.style.borderColor \u003d str(self.session.custom.disableBtncolour)\n\treturn value",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "enabled": 0,
          "image": {
            "width": 100
          },
          "style": {
            "borderColor": "value",
            "classes": "PDA/PDAButton"
          },
          "text": "Save"
        },
        "type": "ia.input.button"
      }
    ],
    "meta": {
      "name": "root"
    },
    "type": "ia.container.coord"
  }
}