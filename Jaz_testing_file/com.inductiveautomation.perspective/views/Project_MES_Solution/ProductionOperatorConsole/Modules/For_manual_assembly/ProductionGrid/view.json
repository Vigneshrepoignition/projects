{
  "custom": {},
  "events": {
    "system": {
      "onStartup": [
        {
          "config": {
            "script": "\ttry:\n\t\timport math\n#\t\tcurrentShiftId\u003dProductionOperatorConsole.getCurrentShiftId()\t\t\n#\t\tfor i in (currentShiftId):\n\t\tselectedLineId \u003d self.session.custom.LineID\n\t\tshiftId\u003d Authentication.getshiftId(selectedLineId)\n\t\tsystem.perspective.print(\u0027Shift Id :\u0027 + str(shiftId) + \u0027 Line ::\u0027 + str(selectedLineId))\n\t\tcurrentDate\u003d\u00272023-02-01\u0027#----------------Currently not required as API Input-------------\t\n#\t\tshiftDate\u003dsystem.date.format(currentDate, \"YYYY-MM-DD\")\n\t\tshiftDate\u003d\u00272023-02-01\u0027\t#----------------Currently not required as API Input-------------\t\n\t\twoNo\u003dself.session.custom.WoNumber\n\t\tparameters\u003d{\u0027shiftId\u0027:shiftId,\u0027shiftDate\u0027:shiftDate,\u0027woNo\u0027:woNo,}\n\t\tsystem.perspective.print(\"parameters--\u003e\"+str(parameters))\n\t\tproductionDetails\u003dProductionOperatorConsole.getProductionDetails(shiftId,shiftDate,woNo)\n\t\tsystem.perspective.print(\"productionDetails--\u003e\"+str(productionDetails))\n\t\tProductionDataList\u003d[]\n\t\tfor i in(productionDetails):\n\t\t\thour\u003di.get(\u0027Hour\u0027)\n\t\t\ttarget\u003di.get(\u0027Target\u0027)\t\n\t\t\tproduction\u003di.get(\u0027Production\u0027)\t\n\t\t\tScrap\u003di.get(\u0027Scrap\u0027)\t\t\t\t\n\t\t\trunningTime\u003di.get(\u0027ProductionTime\u0027)\t\n\t\t\trunningTime\u003dint(runningTime)\n\t\t\ttotalDownTime\u003di.get(\u0027DownTime\u0027)\t\n\t\t\ttotalDownTime\u003dint(totalDownTime)\n\t\t\tidleTime\u003di.get(\u0027IdleTime\u0027)\n\t\t\tidleTime\u003dmath.ceil(idleTime)\t\n\t\t\tidleTime\u003dint(idleTime)\n\t\t\tcomment\u003di.get(\u0027Comment\u0027)\n\t\t\tDifference\u003d\u0027\u0027\n\t\t\tStatus\u003d\u0027\u0027\n\t\t\tactions \u003d \u0027\u0027\n\t\t\tID \u003d i.get(\u0027Id\u0027)\n\t\t\tDownTime\u003d[runningTime,totalDownTime,idleTime]\n\t\t\tparameterList\u003d[hour,target,production,Scrap,Difference,Status,runningTime,totalDownTime,idleTime,DownTime,comment,actions,ID]\t\n\t\t\tProductionDataList.append(parameterList)\t\n\t\theaders \u003d [\"Hour\",\"Target\",\"Production\",\"Scrap\",\"Difference\",\"Status\",\"RunningTime\",\"TotalDownTime\",\"IdleTime\",\"DownTime\",\"Comment\",\"actions\",\"ID\"]\n\t\tresultDetails \u003d system.dataset.toDataSet(headers,ProductionDataList)\n\t\tself.getChild(\"root\").getChild(\"Tbl_HourlyDetails\").props.data \u003d resultDetails\n\n\texcept:\n\t\tsystem.perspective.print(\"Exception::Loading Production Grid data\")\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t"
          },
          "enabled": false,
          "scope": "G",
          "type": "script"
        },
        {
          "config": {
            "script": "\tselectedLineId \u003d self.session.custom.LineID\n\tdata \u003dfpsi_ignition01.Manual_auto_Downtime_grid(lineId\u003dselectedLineId)\n\tself.getChild(\"root\").getChild(\"Tbl_HourlydowntimeDetails\").props.data \u003d data\n\tsystem.perspective.print(\"data23\")\n\tdata1\u003dfpsi_ignition01.Manual_auto_Production_details(lineID\u003d2)\n\tsystem.perspective.print(\"data1\")\n\tsystem.perspective.print(data1)\n\tself.getChild(\"root\").getChild(\"Tbl_HourlyproductionDetails\").props.data\u003ddata1\n\n#\tselectedLineId \u003d self.session.custom.LineID\n#\tdataset1 \u003dfpsi_ignition01.Manual_auto_Downtime_grid(lineId\u003dselectedLineId)\n#\tdataset2 \u003dfpsi_ignition01.Manual_auto_Production_details(lineID\u003dselectedLineId)\n#\t\n#\tds1 \u003d system.dataset.toDataSet(dataset1)\n#\tds2 \u003d system.dataset.toDataSet(dataset2)\n#\tsystem.dataset.\n#\theaders1 \u003d system.dataset.getColumnHeaders(ds1)\n#\theaders2 \u003dsystem.dataset.getColumnHeaders(ds2)\n#\t\n#\tcombinedHeaders \u003d headers1 + headers2\n#\tcombinedDataset \u003d system.dataset.toDataSet(combinedHeaders, [])\n#\n#\tfor rowIndex in range(dataset1.rowCount):\n#\t    rowValues \u003d ds1.getRow(rowIndex)\n#\t    combinedDataset \u003d system.dataset.addRow(combinedDataset, rowValues)\n#\t   \n#\tself.getChild(\"root\").getChild(\"Tbl_HourlyproductionDetails\").props.data\u003dcombinedDataset\n#\t\n#\t# Assuming you have two datasets named dataset1 and dataset2 with different headers\n#\tdataset1 \u003d ...  # Replace ... with the actual dataset variable\n#\tdataset2 \u003d ...  # Replace ... with the actual dataset variable\n#\t\n#\t# Get headers from both datasets\n#\theaders1 \u003d dataset1.getColumnNames()\n#\theaders2 \u003d dataset2.getColumnNames()\n#\t\n#\t# Create a new dataset with combined headers\n#\tcombinedHeaders \u003d headers1 + headers2\n#\tcombinedDataset \u003d system.dataset.toDataSet(combinedHeaders, [])\n#\t\n#\t# Append rows from dataset1 to the combined dataset\n#\tfor rowIndex in range(dataset1.rowCount):\n#\t    rowValues \u003d dataset1.getRow(rowIndex)\n#\t    combinedDataset \u003d system.dataset.addRow(combinedDataset, rowValues)\n#\t\n#\t# Append rows from dataset2 to the combined dataset\n#\tfor rowIndex in range(dataset2.rowCount):\n#\t    rowValues \u003d dataset2.getRow(rowIndex)\n#\t    combinedDataset \u003d system.dataset.addRow(combinedDataset, rowValues)\n#\t\n#\t# Now combinedDataset contains the merged data with combined headers"
          },
          "enabled": false,
          "scope": "G",
          "type": "script"
        }
      ]
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "height": 492,
      "width": 868
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "PollingIcon"
        },
        "position": {
          "height": 0.1918,
          "width": 0.1201,
          "x": 0.6939,
          "y": 0.6639
        },
        "propConfig": {
          "meta.visible": {
            "binding": {
              "config": {
                "aggregate": "MinMax",
                "avoidScanClassValidation": true,
                "dateRange": {
                  "mostRecent": "5",
                  "mostRecentUnits": "HOUR"
                },
                "enableValueCache": true,
                "ignoreBadQuality": false,
                "polling": {
                  "enabled": true,
                  "rate": "100"
                },
                "preventInterpolation": false,
                "returnFormat": "Wide",
                "returnSize": {
                  "numRows": "100",
                  "type": "FIXED"
                },
                "tags": [],
                "valueFormat": "DATASET"
              },
              "transforms": [
                {
                  "code": "\t\n\tmessageType2 \u003d \u0027RefreshProdGrid\u0027\n\tsystem.perspective.sendMessage(messageType2, payload \u003d {\"value\":\u0027\u0027,\"SelctedRowIndex\":\u0027\u0027}, scope \u003d \"page\")\n\tvalue\u003d0\n\treturn value\n\t",
                  "type": "script"
                }
              ],
              "type": "tag-history"
            }
          }
        },
        "props": {
          "path": "material/refresh"
        },
        "type": "ia.display.icon"
      },
      {
        "events": {
          "component": {
            "onRowClick": {
              "config": {
                "script": "\tself.session.custom.temp_production_rowtable\u003devent.value\n\tsystem.perspective.print(event.value)"
              },
              "enabled": false,
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Tbl_HourlyproductionDetails"
        },
        "position": {
          "height": 0.998,
          "width": 0.9965,
          "x": 0.0025,
          "y": 0.0017
        },
        "propConfig": {
          "props.columns[8].viewParams.value": {
            "access": "PUBLIC"
          }
        },
        "props": {
          "bodyStyle": {
            "classes": "Table/RowsBorder"
          },
          "cells": {
            "allowEditOn": "single-click",
            "style": {
              "height": "15px",
              "marginTop": 7
            }
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY hh:mm:ss",
              "editable": false,
              "field": "hourStart",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": ""
                },
                "title": "Hour Start"
              },
              "justify": "center",
              "numbeerFormat": "0,0.##",
              "number": "value",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "date",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": "",
                "paddingLeft": 5
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 60
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY hh:mm:ss",
              "editable": false,
              "field": "hourEnd",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": ""
                },
                "title": "Hour End"
              },
              "justify": "center",
              "numbeerFormat": "0,0.##",
              "number": "value",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "date",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": "",
                "paddingLeft": 5
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 60
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "goodQuantity",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": ""
                },
                "title": "Good Qty"
              },
              "justify": "center",
              "numbeerFormat": "0,0.##",
              "number": "value",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": "",
                "paddingLeft": 5
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "Project_MES_Solution/ProductionOperatorConsole/Modules/For_manual_assembly/edit_goodproduct",
              "visible": true,
              "width": 30
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "badQuantity",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": ""
                },
                "title": "Bad Qty"
              },
              "justify": "center",
              "numbeerFormat": "0,0.##",
              "number": "value",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": "",
                "paddingLeft": 5
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "Project_MES_Solution/ProductionOperatorConsole/Modules/For_manual_assembly/edit_ngproduct",
              "visible": true,
              "width": 60
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "downtime",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": false,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "Project_MES_Solution/ProductionOperatorConsole/Templates/DownTimeDetails",
              "visible": true,
              "width": 200
            }
          ],
          "data": {
            "$": [
              "ds",
              192,
              1708607142424
            ],
            "$columns": [
              {
                "data": [
                  "[0, 0, 59]",
                  "[0, 0, 5]",
                  "[0, 0, 0]",
                  "[0, 0, 0]",
                  "[0, 0, 0]",
                  "[0, 0, 0]",
                  "[0, 0, 0]",
                  "[0, 0, 0]"
                ],
                "name": "downtime",
                "type": "PyList"
              },
              {
                "data": [
                  false,
                  false,
                  false,
                  false,
                  false,
                  false,
                  false,
                  false
                ],
                "name": "isSuccess",
                "type": "Boolean"
              },
              {
                "data": [
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null
                ],
                "name": "error",
                "type": "String"
              },
              {
                "data": [
                  1,
                  2,
                  3,
                  4,
                  5,
                  6,
                  7,
                  8
                ],
                "name": "idd",
                "type": "Integer"
              },
              {
                "data": [
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "name": "badQuantity",
                "type": "Integer"
              },
              {
                "data": [
                  115,
                  6,
                  0,
                  0,
                  0,
                  0,
                  0,
                  0
                ],
                "name": "goodQuantity",
                "type": "Integer"
              },
              {
                "data": [
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null,
                  null
                ],
                "name": "fkLineID",
                "type": "String"
              },
              {
                "data": [
                  "2024-02-22T15:00:00",
                  "2024-02-22T16:00:00",
                  "2024-02-22T17:00:00",
                  "2024-02-22T18:00:00",
                  "2024-02-22T19:00:00",
                  "2024-02-22T20:00:00",
                  "2024-02-22T21:00:00",
                  "2024-02-22T22:00:00"
                ],
                "name": "hourStart",
                "type": "String"
              },
              {
                "data": [
                  "2024-02-22T15:59:59.999",
                  "2024-02-22T16:59:59.999",
                  "2024-02-22T17:59:59.999",
                  "2024-02-22T18:59:59.999",
                  "2024-02-22T19:59:59.999",
                  "2024-02-22T20:59:59.999",
                  "2024-02-22T21:59:59.999",
                  "2024-02-22T22:59:59.999"
                ],
                "name": "hourEnd",
                "type": "String"
              }
            ]
          },
          "dragOrderable": false,
          "emptyMessage": {
            "noData": {
              "text": "Records Are Not Available."
            }
          },
          "footerGroups": [
            []
          ],
          "headerGroups": [
            [
              {
                "align": "center",
                "justify": "left",
                "span": 1,
                "style": {
                  "classes": ""
                },
                "title": ""
              }
            ]
          ],
          "headerStyle": {
            "backgroundColor": "#CFCFCF",
            "classes": "Table/Header",
            "color": "#000000"
          },
          "pager": {
            "bottom": false,
            "initialOption": 15,
            "options": [
              10,
              15,
              20,
              25,
              50
            ]
          },
          "rows": {
            "height": 28,
            "style": {
              "classes": "Table/Rowsmiddle"
            },
            "subviewExpansionMode": "single"
          }
        },
        "type": "ia.display.table"
      }
    ],
    "meta": {
      "name": "root"
    },
    "props": {
      "mode": "percent",
      "style": {
        "backgroundColor": "#FFFFFF",
        "borderColor": "#D3D0D0",
        "borderStyle": "solid",
        "borderWidth": 1
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "RefreshProdGrid",
          "pageScope": true,
          "script": "\ttry:\n\t\tselectedLineId \u003d self.session.custom.LineID\n\t\tselectedLineId \u003d 2\n\t\tdata \u003dfpsi_ignition01.Manual_auto_Downtime_grid(lineId\u003dselectedLineId)\n\t\t#self.getChild(\"Tbl_HourlydowntimeDetails\").props.data \u003d data\n\n\t\tdata1\u003dfpsi_ignition01.Manual_auto_Production_details(lineID\u003dselectedLineId)\n\t\tpyDataset1 \u003d system.dataset.toPyDataSet(data)\n\t\tpyDataset2 \u003d system.dataset.toPyDataSet(data1)\n#\t\tsystem.perspective.print(\"After pydata\")\n\t\theaderDataset1 \u003d pyDataset1.getColumnNames()\n\t\theaderDataset2 \u003d pyDataset2.getColumnNames()\n\n\t\theader \u003d []\n\t\tfor item in headerDataset1:\n\t\t\theader.append( u\"{0}\".format(str(item)))\n\t\n\t\tfor item in (headerDataset2):\n\t\t\theader.append( u\"{0}\".format(str(item)))\n\t\t\n\t\t# Convert from PyRow to list\n\t\tnewListDataset1  \u003d [list(item) for item in pyDataset1]\n\t\tnewListDataset2  \u003d [list(item) for item in pyDataset2]\n#\t\t\n\t\tlist1 \u003d []\n\t\tlist2 \u003d []\n#\t\tnewListDataset1.extend(newListDataset2)\n#\t\tli \u003d[]\n#\t\tsystem.perspective.print(newListDataset1)\n\t\tfor i,j in zip(newListDataset1,newListDataset2):\n\t\t\tlist1 \u003d i\n\t\t\tlist1.extend(j)\n\t\t\tlist2.append(list1)\n\n\t\trows \u003d system.dataset.toDataSet(header, list2)\n\n\t\n\t\tself.getChild(\"Tbl_HourlyproductionDetails\").props.data \u003d rows\n#\t\t\tsystem.perspective.print(\"Hourly Production Grid: Refresh Done\")\n\t\t\n\n\texcept:\n\t\tsystem.perspective.print(\"Exception::MSG Handler Loading Production Grid datass\")\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.coord"
  }
}