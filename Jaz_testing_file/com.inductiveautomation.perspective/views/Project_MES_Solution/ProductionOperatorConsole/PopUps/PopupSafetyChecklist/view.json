{
  "custom": {},
  "events": {
    "system": {
      "onStartup": {
        "config": {
          "script": "\ttry:\t\t\n\t\tHeader\u003d\u00271\u0027    #-------Id For \u0027Add Checklist\u0027 in Table MST_workflowpage---------------\n\t\tself.getChild(\"root\").getChild(\"lblValidationMsg\").meta.visible\u003d0\n\t\tsystem.perspective.print(\"pAGE START\")\n\t\tWorkflowId\u003dself.session.custom.WorkflowId\t\t\t   \n\t\tWorkOrderId\u003dself.session.custom.WorkorderID \n#\t\tworkflowOperationId\u003d self.session.custom.Operation\n#\t\tworkflowProcessId\u003d self.session.custom.Process\n\t\tWoNumber\u003dself.session.custom.WoNumber\n\t\tUserId\u003dself.session.custom.UserId\n\t\tsystem.perspective.print(\"WorkflowId \u003d \"+str(WorkflowId))\n\t\tsystem.perspective.print(\"WoNumber \u003d \"+str(WoNumber))\n\t\tsystem.perspective.print(\"UserId \u003d \"+str(UserId))\n\t\tsystem.perspective.print(\"WorkOrderId \u003d \"+str(WorkOrderId))\n\t\tWorkOrderNo\u003dWoNumber\n#\t\tWorkflowId\u003d122\n#\t\tWorkOrderId\u003d1\n#\t\tWorkOrderNo\u003d\u0027PD53135519\u0027\n#\t\tWorkOrderId\u003d82273\n#\t\tUserId\u003d63\n\t\tresultDetails\u003dWorkOrderDetailsAPI.getWorkInstructionAttachmentDetails_WorkOrderIdWise(WorkflowId,Header,WorkOrderNo,WorkOrderId,UserId)\n\n\t\tself.getChild(\"root\").getChild(\"TblSafetyChecklist\").props.data\u003dresultDetails\n#\t\tself.getSibling(\"TblSafetyChecklist\").props.data \u003d resultDetails\n\t\tsystem.perspective.print(\"On Startup ---\u003e Checklist\")\t\n\t\t\t\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n# Below code is commented by Sushant on 17-03-2023 and this is alternate function to validate checklist\t\t\t\t\t\t\n\t\tWorkorderId \u003d self.session.custom.WorkorderID\n\t\tresult \u003d ProductionOperatorConsole.validateWorkorderParameters(WorkorderId)\n\t\tIsAllCheckListChecked\u003dresult[2]\n\t\tif IsAllCheckListChecked\u003d\u003dTrue or str(IsAllCheckListChecked) \u003d\u003d \u0027True\u0027:\n\t\t\tself.session.custom.ChecklistValidation \u003d True\t\t\t\t\n\t\telse:\n\t\t\tself.session.custom.ChecklistValidation \u003d False\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\t\t\t\t\n\texcept:\n\t\t\tsystem.perspective.print(\"Exception:: Operation Selection\")\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)\t\t\t\t\t\n\t"
        },
        "scope": "G",
        "type": "script"
      }
    }
  },
  "params": {},
  "props": {
    "defaultSize": {
      "height": 900,
      "width": 1348
    }
  },
  "root": {
    "children": [
      {
        "events": {
          "dom": {
            "onClick": {
              "config": {
                "draggable": false,
                "id": "safetyChecklistpopup",
                "modal": false,
                "overlayDismiss": false,
                "resizable": false,
                "showCloseIcon": false,
                "type": "close",
                "viewPath": "Project_MES_Solution/ProductionOperatorConsole/PopUps/PopupSafetyChecklist",
                "viewportBound": false
              },
              "scope": "C",
              "type": "popup"
            }
          }
        },
        "meta": {
          "name": "IcnClose"
        },
        "position": {
          "height": 0.0458,
          "width": 0.0379,
          "x": 0.9592,
          "y": 0.0071
        },
        "props": {
          "color": "#FFFFFF",
          "path": "material/close"
        },
        "type": "ia.display.icon"
      },
      {
        "events": {
          "component": {
            "onEditCellCommit": {
              "config": {
                "script": "\ttry:\n\t\tupdatedValue\u003devent.value  \n\t\tselColumn\u003d\u0027Notes\u0027\t\t\n\t\tdefineKeyColumn \u003d\"Id\"\n\t\tselRow\u003devent.rowIndex\n\t\tdtSet\u003dself.props.data    \n\t\tupdateRowResultDs \u003d {selColumn:updatedValue}    \n\t\tresultpyData \u003d system.dataset.updateRow(dtSet,selRow,updateRowResultDs)        \n\t\tds\u003d system.dataset.toPyDataSet(resultpyData)    \n\t\tself.props.data\u003dds\t\n\t\tsystem.perspective.print(\"Notes data updated Done--\u003e\")\n\t\t\n\t\t\n################################# For Post the data ##########################################\n\t\ttabldata\u003dself.props.data\t\n\t\tval\u003dtabldata.getValueAt(selRow, selColumn)\n\t\tComponents\u003dtabldata.getValueAt(selRow,defineKeyColumn)\n\t\tcomponentData\u003d[val,Components]\n\n\t\tWorkflowOperations\t\u003dtabldata.getValueAt(selRow,\"Operation\")\n\t\tuserId \u003d self.session.custom.UserId\n\t\tWoNumber \u003dself.session.custom.WoNumber\n\t\tWorkorderId \u003d self.session.custom.WorkorderID\n\t\tsystem.perspective.print(\"WorkorderId \"+str(WorkorderId))\n\t\tOperationList \u003d ProductionOperatorConsole.getOperationListWithIdForWO(WorkorderId,userId)\t\t\t\t\t\t\t\n\t\tfor i in OperationList:\n\t\t\toperationName \u003d i[1]\n\t\tif operationName \u003d\u003d str(WorkflowOperations):\n\t\t\tWorkflowOperationsId \u003d operationName \u003d i[0]\n\t\t\tself.session.custom.WorkflowOperationsId \u003d WorkflowOperationsId\t\t\t\t\t\t\n\t\t\tsystem.perspective.print(\"WorkflowOperationsId \"+str(WorkflowOperationsId))\n\t\tWorkflowId \u003d self.session.custom.WorkflowId\t\t\n\t\tsystem.perspective.print(\"WorkflowId \"+str(WorkflowId))\n\t\toperatorConsoleChecklistId \u003d 0\n\n\t\ttry:\t\t\t\n\t\t\tselectedChecklistId \u003d tabldata.getValueAt(selRow,\"Id\")\n\t\t\tselectedParameter \u003d tabldata.getValueAt(selRow,\"Parameter\")\t\n\t\t\tselectedTypeId \u003d tabldata.getValueAt(selRow,\"Name\")\t\n\t\t\tisSelected \u003d tabldata.getValueAt(selRow,\"Yes_No\")\n\t\t\tNotes \u003d tabldata.getValueAt(selRow,\"Notes\")\t\t\n\t\texcept:\t\t\n\t\t\tsystem.perspective.print(\"Unable to read selectedChecklistId\")\n\t\t\tpass\n\t\tsystem.perspective.print(\"WorkflowOperationsId \"+str(WorkflowOperationsId))\n\t\tsystem.perspective.print(\"WoNumber \"+str(WoNumber))\n\t\tsystem.perspective.print(\"WorkflowId \"+str(WorkflowId))\n\t\tsystem.perspective.print(\"operatorConsoleChecklistId \"+str(operatorConsoleChecklistId))\n\t\tsystem.perspective.print(\"selectedChecklistId \"+str(selectedChecklistId))\n\t\tsystem.perspective.print(\"selectedParameter \"+str(selectedParameter))\n\t\tsystem.perspective.print(\"selectedTypeId \"+str(selectedTypeId))\n\t\tsystem.perspective.print(\"isSelected \"+str(isSelected))\n\t\tresult \u003d WorkOrderDetailsAPI.postChecklistDetails(WorkflowOperationsId,WoNumber,WorkflowId,operatorConsoleChecklistId,selectedChecklistId,selectedParameter,selectedTypeId,isSelected,userId,Notes)\t\t\t\n\t\tsystem.perspective.print(\"Checklist Update Post Successfully -- notes option\")\n\t\t\n\texcept Exception as e:\n\t\tsystem.perspective.print(\u0027Exception :Notes data updating column\u0027)\n\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\tsystem.perspective.print(errorMessage)\n\t\tlineno \u003d tb.tb_lineno\n\t\tsystem.perspective.print(lineno)"
              },
              "scope": "G",
              "type": "script"
            },
            "onRowClick": [
              {
                "config": {
                  "script": "\ttry:\t\n\n\t\tself.props.columns[6].visible \u003d false\n\t\n\t\ttabldata\u003dself.props.data\t\n\t\tselRow\u003dself.props.selection.selectedRow\n#\t\tval\u003dtabldata.getValueAt(selRow, selColumn)\n#\t\tComponents\u003dtabldata.getValueAt(selRow,defineKeyColumn)\n#\t\tcomponentData\u003d[val,Components]\n#-------------------------------------------------------------------------------------\t\n#operationID\n#\t\tWorkflowOperations \u003d self.getSibling(\"DropdwnSelectCatagory\").props.value\n\t\tWorkflowOperations\t\u003dtabldata.getValueAt(selRow,\"Operation\")\n\t\tuserId \u003d self.session.custom.UserId\n\t\tWoNumber \u003d self.session.custom.WoNumber\t\n\t\tsystem.perspective.print(\"Checkpoint 0\")\t\n\n\t\tWorkorderId \u003d self.session.custom.WorkorderID\n\t\tsystem.perspective.print(\"WorkorderId \u003d \"+str(WorkorderId))\t\n\t\tOperationList \u003d ProductionOperatorConsole.getOperationListWithIdForWO(WorkorderId,userId)\t\t\t\t\t\t\t\n\t\tfor i in OperationList:\n\t\t\toperationName \u003d i[1]\n\t\t\tif operationName \u003d\u003d str(WorkflowOperations):\n\t\t\t\tWorkflowOperationsId \u003d operationName \u003d i[0]\n\t\t\t\tsystem.perspective.print(\"WorkflowOperationsId  \u003d \"+str(WorkflowOperationsId))\t\n\t\t\t\tself.session.custom.WorkflowOperationsId \u003d WorkflowOperationsId\t\n\t\t\t\tbreak\n#\t\tWorkflowOperationsId\u003dtabldata.getValueAt(selRow,\"operationID\")\n#\t\tself.session.custom.WorkflowOperationsId \u003d int(WorkflowOperationsId)\t\t\t\t\n#---------------------------------------------------------------------------------------------------------------------\t\t\t\t\n\t\tWorkflowId \u003d self.session.custom.WorkflowId\t\t\t\t\t\n\t\toperatorConsoleChecklistId \u003d 0\t\t\t\n\t\ttry:\t\t\t\n\t\t\tselectedChecklistId \u003d tabldata.getValueAt(selRow,\"Id\")\n\t\t\tselectedParameter \u003d tabldata.getValueAt(selRow,\"Parameter\")\t\n\t\t\tselectedTypeId \u003d tabldata.getValueAt(selRow,\"checklistType\")\t\n\t\t\tisSelected \u003d tabldata.getValueAt(selRow,\"Yes_No\")\n\t\t\tNotes \u003d tabldata.getValueAt(selRow,\"Notes\")\n\t\t\t\t\t\t\t\n\t\texcept:\t\t\n\t\t\timport sys, os\n\t\t\tsystem.perspective.print(\"Unable to read selectedChecklistId\")\n\t\t\tscriptName\u003d\u0027On Row Click Safety Checksheet\u0027\n\t\t\terrorMessage\u003dscriptName  +\u0027 Exception : \u0027+  str(sys.exc_info()[1])\n\t\t\tAuthentication.exceptionLogger(errorMessage)\t\n\t\t\tsystem.perspective.print(errorMessage)\n\t\tsystem.perspective.print(\"Checkpoint 5\")\n\t\tsystem.perspective.print(WorkflowOperationsId)\n\t\tsystem.perspective.print(WoNumber)\n\t\tsystem.perspective.print(WorkflowId)\n\t\tsystem.perspective.print(operatorConsoleChecklistId)\n\t\tsystem.perspective.print(selectedChecklistId)\n\t\tsystem.perspective.print(selectedParameter)\n\t\tsystem.perspective.print(selectedTypeId)\n\t\tsystem.perspective.print(isSelected)\n\t\tsystem.perspective.print(userId)\n\t\tresult \u003d WorkOrderDetailsAPI.postChecklistDetails(WorkflowOperationsId,WoNumber,WorkflowId,operatorConsoleChecklistId,selectedChecklistId,selectedParameter,selectedTypeId,isSelected,userId,Notes)\t\n\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\t\n\t\tWorkorderId \u003d self.session.custom.WorkorderID\n\t\tsystem.perspective.print(\"WorkorderId 6\"+ str(WorkorderId))\n\n\t\tIsMachineRunning,IsComponentValid,IsAllCheckListChecked \u003d ProductionOperatorConsole.validateWorkorderParameters(WorkorderId)\t\n\t\tsystem.perspective.print(\"IsAllCheckListChecked 5\"+ str(IsAllCheckListChecked))\t\t\n\t\tif IsAllCheckListChecked\u003d\u003dTrue or str(IsAllCheckListChecked) \u003d\u003d \u0027True\u0027:\n\t\t\tself.session.custom.ChecklistValidation \u003d True\t\t\t\t\n\t\telse:\n\t\t\tself.session.custom.ChecklistValidation \u003d False\n\t\tsystem.perspective.print(\"Checkpoint 6\")\t\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n\texcept:\t\t\n\t\timport sys, os\n\t\tscriptName\u003d\u0027On Row Click Safety Checksheet\u0027\n\t\terrorMessage\u003dscriptName  +\u0027 Exception : \u0027+  str(sys.exc_info()[1])\n\t\tAuthentication.exceptionLogger(errorMessage)\t\n\t\tsystem.perspective.print(errorMessage)"
                },
                "enabled": false,
                "scope": "G",
                "type": "script"
              },
              {
                "config": {
                  "script": "\tselectedColumn\u003dself.props.selection.selectedColumn\n\twoStatus\u003dself.session.custom.woStatus\n\tsystem.perspective.print(\"woStatus \"+ str(woStatus))\n\tif str(\u0027Yes_No\u0027).lower().strip()\u003d\u003dstr(selectedColumn).lower().strip():\n\t\tif woStatus\u003d\u003d\u0027Not-Started\u0027 or woStatus\u003d\u003d\u0027Not Started\u0027:\n\t\t\tself.getSibling(\"lblValidationMsg\").meta.visible\u003d0\n\t\telse:\n\t\t\tself.getSibling(\"lblValidationMsg\").meta.visible\u003d1\n\n\tself.props.columns[6].visible \u003d 0"
                },
                "scope": "G",
                "type": "script"
              }
            ]
          },
          "dom": {
            "onMouseOver": {
              "config": {
                "script": "\tif self.props.selection.selectedColumn\u003d\u003d\u0027Yes_No\u0027:\n\t\tself.props.columns[3].editable\u003d0\n\telse:\n\t\tself.props.columns[3].editable\u003d1"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "TblSafetyChecklist"
        },
        "position": {
          "height": 0.8489,
          "width": 0.9651,
          "x": 0.0174,
          "y": 0.1277
        },
        "props": {
          "bodyStyle": {
            "classes": "Table/RowsBorder",
            "overflowWrap": "break-word",
            "textAlign": "justify-all"
          },
          "cells": {
            "allowEditOn": "single-click"
          },
          "columns": [
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "SrNo",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "style": {
                  "classes": "Basic/ShortTableHeader"
                },
                "title": "Sr No"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": true,
              "style": {
                "classes": "Basic/ShortTableEntries",
                "paddingLeft": 5
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": 70
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Operation",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Basic/ShortTableHeader"
                },
                "title": "Operation"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Basic/ShortTableEntries"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "operationID",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Basic/ShortTableHeader"
                },
                "title": "operationID"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Basic/ShortTableEntries"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": 1,
              "field": "Name",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Basic/ShortTableHeader"
                },
                "title": "Checklist Name"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Basic/ShortTableEntries"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "checklistType",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Basic/ShortTableHeader"
                },
                "title": "Type"
              },
              "justify": "left",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Basic/ShortTableEntries"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Parameter",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": "Basic/ShortTableEntries Basic/ShortTableHeader"
                },
                "title": "Parameters"
              },
              "justify": "left",
              "number": "progress",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": "Basic/ShortTableEntries"
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "Project_MES_Solution/OperatorConsole/PopUps/OprConsoleTabViews/ChecklistTick",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Yes_No",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "center",
                "style": {
                  "classes": "Basic/ShortTableEntries Basic/ShortTableHeader"
                },
                "title": "Yes/No"
              },
              "justify": "center",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "view",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {
                "rowData": "",
                "rowIndex": "",
                "value": ""
              },
              "viewPath": "Project_MES_Solution/ProductionOperatorConsole/Templates/SafetyCheckBox",
              "visible": true,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": false,
              "field": "Id",
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": false,
              "width": ""
            },
            {
              "align": "center",
              "boolean": "checkbox",
              "dateFormat": "MM/DD/YYYY",
              "editable": true,
              "field": "Notes",
              "filter": {
                "boolean": {
                  "condition": ""
                },
                "date": {
                  "condition": "",
                  "value": ""
                },
                "enabled": false,
                "number": {
                  "condition": "",
                  "value": ""
                },
                "string": {
                  "condition": "",
                  "value": ""
                },
                "visible": "on-hover"
              },
              "footer": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "header": {
                "align": "center",
                "justify": "left",
                "style": {
                  "classes": ""
                },
                "title": ""
              },
              "justify": "auto",
              "number": "value",
              "numberFormat": "0,0.##",
              "progressBar": {
                "bar": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "max": 100,
                "min": 0,
                "track": {
                  "color": "",
                  "style": {
                    "classes": ""
                  }
                },
                "value": {
                  "enabled": true,
                  "format": "0,0.##",
                  "justify": "center",
                  "style": {
                    "classes": ""
                  }
                }
              },
              "render": "auto",
              "resizable": true,
              "sort": "none",
              "sortable": true,
              "strictWidth": false,
              "style": {
                "classes": ""
              },
              "toggleSwitch": {
                "color": {
                  "selected": "",
                  "unselected": ""
                }
              },
              "viewParams": {},
              "viewPath": "",
              "visible": true,
              "width": ""
            }
          ],
          "data": null,
          "emptyMessage": {
            "noData": {
              "icon": {
                "color": "#C0C0C0",
                "path": "material/fact_check"
              },
              "text": "No Safety Checklist Available"
            }
          },
          "filter": {
            "enabled": true
          },
          "headerStyle": {
            "classes": "Table/Header"
          },
          "pager": {
            "bottom": false,
            "initialOption": 10,
            "options": [
              10,
              25,
              50,
              100,
              100
            ]
          },
          "rows": {
            "style": {
              "classes": "Table/Rowsmiddle"
            }
          }
        },
        "scripts": {
          "customMethods": [],
          "extensionFunctions": null,
          "messageHandlers": [
            {
              "messageType": "SafetyCheckBoxNew",
              "pageScope": true,
              "script": "\ttry:\n\t\t\n\t\tisChecked\u003dpayload[\u0027isChecked\u0027]\n\t\tselRow\u003dpayload[\u0027SelctedRowIndex\u0027]\n\t\tupdatedValue\u003disChecked    \n\t\tselColumn\u003d\u0027Yes_No\u0027\t\t\n\t\tdefineKeyColumn \u003d\"Id\"\n#\t\tselRow\u003dselRow\n\t\tdtSet\u003dself.props.data    \n\t\tupdateRowResultDs \u003d {selColumn:updatedValue}    \n\t\tresultpyData \u003d system.dataset.updateRow(dtSet,selRow,updateRowResultDs)        \n\t\tds\u003d system.dataset.toPyDataSet(resultpyData)    \n\t\tself.props.data\u003dds  \t\t\n\t\tsystem.perspective.print(\"Material ss  sCheck Box MSG Handler Done--\u003e\")\n#------------------------------------------------------------------------------------------\n\t\ttabldata\u003dself.props.data\t\n\t\tval\u003dtabldata.getValueAt(selRow, selColumn)\n\t\tComponents\u003dtabldata.getValueAt(selRow,defineKeyColumn)\n\t\tcomponentData\u003d[val,Components]\n\t#-------------------------------------------------------------------------------------\t\n#\t\tWorkflowOperations \u003d self.getSibling(\"DropdwnSelectCatagory\").props.value\n\t\tuserId \u003d self.session.custom.UserId\n\t\tWoNumber \u003dself.session.custom.WoNumber\t\t\n\n#------------------------------------------New Code to get Operation Id ---------------------------------------------------------------------------\t\t\t\n\t\tWorkflowOperations\t\u003dtabldata.getValueAt(selRow,\"Operation\")\n\t\tWorkflowOperationID\t\u003dtabldata.getValueAt(selRow,\"operationID\")\n\n\t\t\n\t\tWorkorderId \u003d self.session.custom.WorkorderID\n\t\tOperationList \u003d ProductionOperatorConsole.getOperationListWithIdForWO(WorkorderId,userId)\t\t\t\t\t\t\t\n\t\tfor i in OperationList:\n\t\t\toperationName \u003d i[1]\n\n\t\t\tif operationName.strip() \u003d\u003d str(WorkflowOperations).strip():\n\t\t\t\tWorkflowOperationsId \u003d operationName \u003d i[0]\n\t\t\t\tself.session.custom.WorkflowOperationsId \u003d WorkflowOperationsId\t\t\n\t\t\t\tbreak\n#\t\tWorkflowOperationsId \u003d tabldata.getValueAt(selRow,\"operationID\")\t\n\t\tself.session.custom.WorkflowOperationsId \u003d WorkflowOperationsId\t\n\t\tWorkflowId \u003d self.session.custom.WorkflowId\t\t\n\t\toperatorConsoleChecklistId \u003d 0\n#--------------------------------------------------------------------------------------------------------------------------------------------------\n\t\ttry:\t\t\t\n\t\t\tselectedChecklistId \u003d tabldata.getValueAt(selRow,\"Id\")\n\t\t\tselectedParameter \u003d tabldata.getValueAt(selRow,\"Parameter\")\t\n\t\t\tselectedTypeId \u003d tabldata.getValueAt(selRow,\"Name\")\n\t\t\t#Notes \u003d tabldata.getValueAt(selRow,\"Notes\")\n#\t\t\tselectedTypeId \u003d tabldata.getValueAt(selRow,\"checklistType\")\t\n\t\t\t\n\t\t\tisSelected \u003d tabldata.getValueAt(selRow,\"Yes_No\")\t\t\n\n\t\texcept :\n\t\t\timport os,sys\n\t\t\tsystem.perspective.print(\"Unable to read selectedChecklistId\")\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)\n\t\tsystem.perspective.print(\"selev----\")\n\t\tsystem.perspective.print(selectedTypeId)\n\t\tresult \u003d WorkOrderDetailsAPI.postChecklistDetails(WorkflowOperationsId,WoNumber,WorkflowId,operatorConsoleChecklistId,selectedChecklistId,selectedParameter,selectedTypeId,isSelected,userId,Notes)\t\n\t\tsystem.perspective.print(\"Checklost Update Post Successfully\" )\n#------------------------------------------------------alternate function to validate checklist---------------------------------------------------------------------------------\n\t\tWorkorderId \u003d self.session.custom.WorkorderID\n\t\tsystem.perspective.print(\"WorkorderId \" +str(WorkorderId) )\n\t\tIsMachineRunning,IsComponentValid,IsAllCheckListChecked \u003d ProductionOperatorConsole.validateWorkorderParameters(WorkorderId)\t\t\t\n\t\tif IsAllCheckListChecked\u003d\u003dTrue or str(IsAllCheckListChecked) \u003d\u003d \u0027True\u0027:\n\t\t\tself.session.custom.ChecklistValidation \u003d True\t\t\t\t\n\t\telse:\n\t\t\tself.session.custom.ChecklistValidation \u003d False\n\t\tsystem.perspective.print(\"Checkpoint 6\")\t\n\t  \n\t\t  \t\t  \t\t  \n\texcept Exception as e:\n\t\t\timport os,sys\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)\n\t\t",
              "sessionScope": false,
              "viewScope": false
            },
            {
              "messageType": "SafetyCheckBox",
              "pageScope": true,
              "script": "\t# implement your handler here\n\ttry:\n\t\t\n\t\tisChecked\u003dpayload[\u0027isChecked\u0027]\n\t\tselRow\u003dpayload[\u0027SelctedRowIndex\u0027]\n\t\tupdatedValue\u003disChecked    \n\t\tselColumn\u003d\u0027Yes_No\u0027\t\t\n\t\tdefineKeyColumn \u003d\"Id\"\n#\t\tselRow\u003dselRow\n\t\tdtSet\u003dself.props.data    \n\t\tupdateRowResultDs \u003d {selColumn:updatedValue}    \n\t\tresultpyData \u003d system.dataset.updateRow(dtSet,selRow,updateRowResultDs)        \n\t\tds\u003d system.dataset.toPyDataSet(resultpyData)    \n\t\tself.props.data\u003dds  \t\t\n\t\tsystem.perspective.print(\"Material Check Box MSG Handler Done--\u003e\")\n#------------------------------------------------------------------------------------------\n\t\ttabldata\u003dself.props.data\t\n\t\tval\u003dtabldata.getValueAt(selRow, selColumn)\n\t\tComponents\u003dtabldata.getValueAt(selRow,defineKeyColumn)\n\t\tcomponentData\u003d[val,Components]\n\t#-------------------------------------------------------------------------------------\t\n#\t\tWorkflowOperations \u003d self.getSibling(\"DropdwnSelectCatagory\").props.value\n#\t\tWorkflowOperations\t\u003dtabldata.getValueAt(selRow,\"operationID\")\n\t\tWorkflowOperations\t\u003dtabldata.getValueAt(selRow,\"Operation\")\n\t\tuserId \u003d self.session.custom.UserId\n\t\tWoNumber \u003dself.session.custom.WoNumber\t\t\n\n#------------------------------------------New Code to get Operation Id ---------------------------------------------------------------------------\t\t\t\t\n\t\tWorkorderId \u003d self.session.custom.WorkorderID\n\t\tsystem.perspective.print(\"WorkorderId \"+str(WorkorderId))\n\t\tOperationList \u003d ProductionOperatorConsole.getOperationListWithIdForWO(WorkorderId,userId)\t\t\t\t\t\t\t\n\t\tfor i in OperationList:\n\t\t\toperationName \u003d i[1]\n\t\t\tif operationName \u003d\u003d str(WorkflowOperations):\n\t\t\t\tWorkflowOperationsId \u003d operationName \u003d i[0]\n\t\t\t\tself.session.custom.WorkflowOperationsId \u003d WorkflowOperationsId\t\t\t\t\t\t\n\t\t\t\tsystem.perspective.print(\"WorkflowOperationsId \"+str(WorkflowOperationsId))\n\t\tWorkflowId \u003d self.session.custom.WorkflowId\t\t\n\t\tsystem.perspective.print(\"WorkflowId \"+str(WorkflowId))\n\t\toperatorConsoleChecklistId \u003d 0\n#--------------------------------------------------------------------------------------------------------------------------------------------------\n\t\ttry:\t\t\t\n\t\t\tselectedChecklistId \u003d tabldata.getValueAt(selRow,\"Id\")\n\t\t\tselectedParameter \u003d tabldata.getValueAt(selRow,\"Parameter\")\t\n\t\t\tselectedTypeId \u003d tabldata.getValueAt(selRow,\"Name\")\t\n\t\t\tisSelected \u003d tabldata.getValueAt(selRow,\"Yes_No\")\n\t\t\tNotes \u003d tabldata.getValueAt(selRow,\"Notes\")\t\n\t\texcept:\t\t\n\t\t\tsystem.perspective.print(\"Unable to read selectedChecklistId\")\n\t\t\tpass\n\t\tsystem.perspective.print(\"WorkflowOperationsId \"+str(WorkflowOperationsId))\n\t\tsystem.perspective.print(\"WoNumber \"+str(WoNumber))\n\t\tsystem.perspective.print(\"WorkflowId \"+str(WorkflowId))\n\t\tsystem.perspective.print(\"operatorConsoleChecklistId \"+str(operatorConsoleChecklistId))\n\t\tsystem.perspective.print(\"selectedChecklistId \"+str(selectedChecklistId))\n\t\tsystem.perspective.print(\"selectedParameter \"+str(selectedParameter))\n\t\tsystem.perspective.print(\"selectedTypeId \"+str(selectedTypeId))\n\t\tsystem.perspective.print(\"isSelected \"+str(isSelected))\n\t\tresult \u003d WorkOrderDetailsAPI.postChecklistDetails(WorkflowOperationsId,WoNumber,WorkflowId,operatorConsoleChecklistId,selectedChecklistId,selectedParameter,selectedTypeId,isSelected,userId,Notes)\t\t\t\n\t\tsystem.perspective.print(\"Checklost Update Post Successfully\")\n#------------------------------------------------------alternate function to validate checklist---------------------------------------------------------------------------------\n\t\tWorkorderId \u003d self.session.custom.WorkorderID\n\t\n\t\tresult \u003d ProductionOperatorConsole.validateWorkorderParameters(WorkorderId)\t\t\t\n\t\tIsMachineRunning\u003dresult[0]\n\t\tIsComponentValid\u003dresult[1]\n\t\tIsAllCheckListChecked\u003dresult[2]\n\t\t\n\t\tif IsAllCheckListChecked\u003d\u003dTrue or str(IsAllCheckListChecked) \u003d\u003d \u0027True\u0027:\n\t\t\tself.session.custom.ChecklistValidation \u003d True\t\t\t\t\n\t\telse:\n\t\t\tself.session.custom.ChecklistValidation \u003d False\n\t\t\n\t\tmessageType \u003d \u0027RefreshChecksheet\u0027\n\t\tsystem.perspective.sendMessage(messageType, payload \u003d {}, scope \u003d \"page\")\t\n\t\tsystem.perspective.print(\"Checkpoint 6\")\t\n#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n# Below code is commented by Sushant on 17-03-2023 and used alternate function to validate checklist\t\t\n#\t\tsystem.perspective.print(\u0027Safety Validation: \u0027 + str(self.session.custom.ChecklistValidation))\n#\t\tuserId\u003dself.session.custom.UserId\n#\t\tWoNumber\u003dself.session.custom.WoNumber\t\n#\t\tworkflowId \u003d self.session.custom.WorkflowId\t\n#\t\tOperationList\u003dProductionOperatorConsole.getOperationsForWo(userId,WoNumber)\n#\t\tsystem.perspective.print(\u0027OperationList : \u0027 + str(OperationList))\n#\t\tOperationListCount \u003d OperationList.getRowCount()\n#\t\tsystem.perspective.print(\u0027OperationListCount : \u0027 + str(OperationListCount))\n#\t\tFlagSet \u003d 0\n#\t\tfor i in range(OperationListCount):\n#\t\t\tif FlagSet \u003d\u003d 0:\n#\t\t\t\tworkflowOperationId\t\u003dOperationList.getValueAt(i, \"Operation\")\n#\t\t\t\tworkflowProcessId\u003dOperationList.getValueAt(i, \"Operation\")\n#\t\t\t\tSafetyresultDetails \u003d WorkOrderDetailsAPI.getChecklistWorkInstructionDetails(WoNumber,workflowId,workflowOperationId,workflowProcessId)\n#\t\t\t\tisSafteyTableEmpty \u003d SafetyresultDetails.getRowCount()\n#\t\t\t\tif isSafteyTableEmpty\u003e0:\n#\t\t\t\t\tfor i in range(isSafteyTableEmpty):\n#\t\t\t\t\t\tIsChecked\u003dSafetyresultDetails.getValueAt(i,\"Yes_No\")\n#\t\t\t\t\t\tif IsChecked\u003d\u003dFalse or IsChecked\u003d\u003d\u0027False\u0027:\n#\t\t\t\t\t\t\tself.session.custom.ChecklistValidation \u003d False\n#\t\t\t\t\t\t\tsystem.perspective.print(\u0027Safety Validation LASSSSSSTTTT: \u0027 + str(self.session.custom.ChecklistValidation))\n#\t\t\t\t\t\t\tFlagSet \u003d 1\n#\t\t\t\t\t\t\tbreak\n#\t\t\t\t\t\telse:\n#\t\t\t\t\t\t\tself.session.custom.ChecklistValidation \u003d True\n#\t\t\t\telse:\n#\t\t\t\t\tself.session.custom.ChecklistValidation \u003d True\n#\t\t\t\t\tsystem.perspective.print(\u0027Safety Validation CHECK----\u003e: \u0027 + str(self.session.custom.ChecklistValidation))\n\t  \n\t\t  \t\t  \t\t  \n\texcept Exception as e:\n\t\t\tsystem.perspective.print(\u0027Exception :msg Handler Safety CheckList updatig column\u0027)\n\t\t\texc_type, exc_obj,tb \u003d sys.exc_info()\n\t\t\terrorMessage \u003d \"Error:\"+ str(exc_obj)\n\t\t\tsystem.perspective.print(errorMessage)\n\t\t\tlineno \u003d tb.tb_lineno\n\t\t\tsystem.perspective.print(lineno)",
              "sessionScope": false,
              "viewScope": false
            },
            {
              "messageType": "RefreshChecksheet",
              "pageScope": true,
              "script": "\t# implement your handler here\n\t\tHeader\u003d\u00271\u0027\n\n\t\tWorkflowId\u003dself.session.custom.WorkflowId\t\t\t   \n\t\tWorkOrderId\u003dself.session.custom.WorkorderID \n\n\t\tWoNumber\u003dself.session.custom.WoNumber\n\t\t\n\t\tUserId\u003dself.session.custom.UserId\n\n\t\tWorkOrderNo\u003dWoNumber\n\n\t\tresultDetails\u003dWorkOrderDetailsAPI.getWorkInstructionAttachmentDetails_WorkOrderIdWise(WorkflowId,Header,WorkOrderNo,WorkOrderId,UserId)\n\n\t\tself.props.data\u003dresultDetails",
              "sessionScope": false,
              "viewScope": false
            }
          ]
        },
        "type": "ia.display.table"
      },
      {
        "events": {
          "system": {
            "onStartup": {
              "config": {
                "script": "\n\tValidation\u003dself.session.custom.ChecklistMaterialValidation\n\tsystem.perspective.print(\"Validation--\u003e\"+str(Validation))\n\tself.props.selected\u003dTrue"
              },
              "enabled": false,
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Checkbox"
        },
        "position": {
          "height": 0.0422,
          "width": 0.2052,
          "x": 0.7662,
          "y": 0.0731
        },
        "propConfig": {
          "props.selected": {
            "binding": {
              "config": {
                "path": "session.custom.ChecklistValidation"
              },
              "type": "property"
            }
          },
          "props.text": {
            "binding": {
              "config": {
                "path": "session.custom.ChecklistValidation"
              },
              "transforms": [
                {
                  "code": "\tif value\u003d\u003dFalse or str(value) \u003d\u003d \u0027False\u0027:\n\t\tTextVal\u003d\u0027Not Verified\u0027\n\telif value\u003d\u003dTrue or str(value) \u003d\u003d \u0027True\u0027:\n\t\tTextVal\u003d\u0027Verified\u0027\n\telse:\n\t\tpass\n\treturn TextVal",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "checkedIcon": {
            "color": {
              "disabled": "#008000",
              "enabled": "#008000"
            }
          },
          "enabled": 0,
          "indeterminateIcon": {
            "style": {
              "cursor": "none"
            }
          },
          "style": {
            "classes": "Common/Label_WithOutBackground"
          },
          "textPosition": "left"
        },
        "type": "ia.input.checkbox"
      },
      {
        "children": [
          {
            "meta": {
              "name": "Label"
            },
            "position": {
              "height": 0.5079,
              "width": 0.4201,
              "x": 0.0153,
              "y": 0.1129
            },
            "propConfig": {
              "props.text": {
                "binding": {
                  "config": {
                    "path": "session.custom.WoNumber"
                  },
                  "transforms": [
                    {
                      "code": "\tvalue \u003d \"Checklist (\"+str(value)+\")\"\n\treturn value",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "textStyle": {
                "classes": "Common/Label_Header"
              }
            },
            "type": "ia.display.label"
          }
        ],
        "meta": {
          "name": "CoordinateContainer"
        },
        "position": {
          "height": 0.07,
          "width": 1
        },
        "props": {
          "mode": "percent",
          "style": {
            "backgroundColor": "#EDF0F0"
          }
        },
        "type": "ia.container.coord"
      },
      {
        "meta": {
          "name": "lblValidationMsg",
          "visible": 0
        },
        "position": {
          "height": 0.0356,
          "width": 0.5905,
          "x": 0.0199,
          "y": 0.0736
        },
        "props": {
          "text": "Work Order Is In Progress Can Not Modify Check List",
          "textStyle": {
            "classes": "Common/Label_Warning"
          }
        },
        "type": "ia.display.label"
      },
      {
        "events": {
          "component": {
            "onActionPerformed": {
              "config": {
                "script": "\tsystem.perspective.openPopup(\u0027safetyChecklistpopup\u0027,\u0027Project_MES_Solution/ProductionOperatorConsole/PopUps/PopupSafetyChecklist_BCP24032023\u0027,draggable\u003dFalse,resizable \u003d False,modal\u003dTrue,showCloseIcon\u003dFalse)"
              },
              "scope": "G",
              "type": "script"
            }
          }
        },
        "meta": {
          "name": "Button",
          "visible": false
        },
        "position": {
          "height": 0.0378,
          "width": 0.0853,
          "x": 0.0275,
          "y": 0.0769
        },
        "props": {
          "text": "test"
        },
        "type": "ia.input.button"
      }
    ],
    "meta": {
      "name": "root"
    },
    "position": {
      "x": 0,
      "y": -0.016
    },
    "props": {
      "mode": "percent"
    },
    "type": "ia.container.coord"
  }
}